{"ast":null,"code":"var _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport dynamic from 'next/dynamic';\nimport getLocation from './queries/getLocation';\nconst center = [51.505, -0.09];\nconst polygon = [[51.515, -0.09], [51.52, -0.1], [51.52, -0.12]];\nconst multiPolygon = [[[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]], [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]]];\nconst DynamicComponentWithNoSSR = dynamic(() => import('./components/Map'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./components/Map')],\n    modules: ['./components/Map']\n  }\n});\nexport default function LocationDetails({\n  location\n}) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"../node_modules/leaflet/dist/leaflet.css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })), __jsx(DynamicComponentWithNoSSR, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}\nexport const getServerSideProps = async ({\n  params\n}) => {\n  const res = await getLocation({\n    id: params.id\n  });\n  return {\n    props: {\n      location: res.data\n    }\n  };\n};","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx"],"names":["React","Head","dynamic","getLocation","center","polygon","multiPolygon","DynamicComponentWithNoSSR","ssr","LocationDetails","location","getServerSideProps","params","res","id","props","data"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAIA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,OAAP,MAAoB,cAApB;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AAQA,MAAMC,MAAM,GAAG,CAAC,MAAD,EAAS,CAAC,IAAV,CAAf;AAEA,MAAMC,OAAO,GAAG,CACd,CAAC,MAAD,EAAS,CAAC,IAAV,CADc,EAEd,CAAC,KAAD,EAAQ,CAAC,GAAT,CAFc,EAGd,CAAC,KAAD,EAAQ,CAAC,IAAT,CAHc,CAAhB;AAMA,MAAMC,YAAY,GAAG,CACnB,CACE,CAAC,KAAD,EAAQ,CAAC,IAAT,CADF,EAEE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAFF,EAGE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAHF,CADmB,EAMnB,CACE,CAAC,KAAD,EAAQ,CAAC,IAAT,CADF,EAEE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAFF,EAGE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAHF,CANmB,CAArB;AAaA,MAAMC,yBAAyB,GAAGL,OAAO,CAAC,MAAM,OAAO,kBAAP,CAAP,EAAmC;AAAEM,EAAAA,GAAG,EAAE,KAAP;AAAA;AAAA,wCAArB,kBAAqB;AAAA,cAArB,kBAAqB;AAAA;AAAA,CAAnC,CAAzC;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAmE;AAChF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,GAAG,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,0CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAyBE,MAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,CADF;AA6BD;AAED,OAAO,MAAMC,kBAAsC,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAC1E,QAAMC,GAAG,GAAG,MAAMV,WAAW,CAAC;AAAEW,IAAAA,EAAE,EAAEF,MAAM,CAACE;AAAb,GAAD,CAA7B;AAEA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEL,MAAAA,QAAQ,EAAEG,GAAG,CAACG;AAAhB;AAAT,GAAP;AACD,CAJM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Item as SemanticItem } from 'semantic-ui-react';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport { GetServerSideProps } from 'next';\nimport Head from 'next/head';\n\nimport dynamic from 'next/dynamic';\nimport Location from './models/Location';\nimport getLocation from './queries/getLocation';\n\nimport Item from './components/Item';\n\ntype LocationProps = {\n  location: Location;\n};\n\nconst center = [51.505, -0.09];\n\nconst polygon = [\n  [51.515, -0.09],\n  [51.52, -0.1],\n  [51.52, -0.12],\n];\n\nconst multiPolygon = [\n  [\n    [51.51, -0.12],\n    [51.51, -0.13],\n    [51.53, -0.13],\n  ],\n  [\n    [51.51, -0.05],\n    [51.51, -0.07],\n    [51.53, -0.07],\n  ],\n];\n\nconst DynamicComponentWithNoSSR = dynamic(() => import('./components/Map'), { ssr: false });\n\nexport default function LocationDetails({ location }: LocationProps): JSX.Element {\n  return (\n    <div>\n      <Head>\n        <link rel=\"stylesheet\" href=\"../node_modules/leaflet/dist/leaflet.css\" />\n      </Head>\n\n      {/*{isBrowser && (*/}\n      {/*  <Map center={center} zoom={13}>*/}\n      {/*    <TileLayer*/}\n      {/*      attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'*/}\n      {/*      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"*/}\n      {/*    />*/}\n      {/*    <Circle center={center} fillColor=\"blue\" radius={200} />*/}\n      {/*    <CircleMarker center={[51.51, -0.12]} color=\"red\" radius={20}>*/}\n      {/*      <Popup>Popup in CircleMarker</Popup>*/}\n      {/*    </CircleMarker>*/}\n      {/*    <Polygon color=\"purple\" positions={polygon} />*/}\n      {/*    <Polygon color=\"purple\" positions={multiPolygon} />*/}\n      {/*  </Map>*/}\n      {/*)}*/}\n\n      {/*<SemanticContainer>*/}\n      {/*  <SemanticItem.Group divided>*/}\n      {/*    {<Item key={location.id} title={location.name} imageSrc=\"/map.svg\" detailsUrl={`location/${location.id}`} />}*/}\n      {/*  </SemanticItem.Group>*/}\n      {/*</SemanticContainer>*/}\n      <DynamicComponentWithNoSSR />\n    </div>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const res = await getLocation({ id: params.id });\n\n  return { props: { location: res.data } };\n};\n"]},"metadata":{},"sourceType":"module"}