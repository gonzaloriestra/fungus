{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/components/Map/Map.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Map as MapLeaflet, TileLayer, Polygon } from 'react-leaflet';\n\nvar Map = function Map(_ref) {\n  _s();\n\n  var location = _ref.location,\n      _ref$initialZoom = _ref.initialZoom,\n      initialZoom = _ref$initialZoom === void 0 ? 15 : _ref$initialZoom;\n  var coordinates = location === null || location === void 0 ? void 0 : location.coordinates;\n\n  var _useState = useState(mapPositionFromCoordinates(coordinates)),\n      position = _useState[0];\n\n  var _useState2 = useState(initialZoom),\n      zoom = _useState2[0];\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(MapLeaflet, {\n    center: position,\n    zoom: zoom,\n    style: {\n      height: '700px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 1\n    }\n  }), __jsx(Polygon, {\n    positions: coordinates.map(function (coordinate) {\n      return [coordinate.latitude, coordinate.longitude];\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  })));\n};\n\n_s(Map, \"9pOwZK8Mq8PA64iWRIiO1sFUDN0=\");\n\n_c = Map;\nexport default Map;\n\nfunction mapPositionFromCoordinates(coordinates) {\n  if (coordinates && coordinates.length) {\n    return {\n      lat: coordinates[0].latitude,\n      lng: coordinates[0].longitude\n    };\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/components/Map/Map.tsx"],"names":["React","useState","Map","MapLeaflet","TileLayer","Polygon","location","initialZoom","coordinates","mapPositionFromCoordinates","position","zoom","height","map","coordinate","latitude","longitude","length","lat","lng"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAG,IAAIC,UAAhB,EAA4BC,SAA5B,EAAuCC,OAAvC,QAAsD,eAAtD;;AAUA,IAAMH,GAAG,GAAG,SAANA,GAAM,OAA2D;AAAA;;AAAA,MAAxDI,QAAwD,QAAxDA,QAAwD;AAAA,8BAA9CC,WAA8C;AAAA,MAA9CA,WAA8C,iCAAhC,EAAgC;AACrE,MAAMC,WAAW,GAAGF,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,WAA9B;;AADqE,kBAGlDP,QAAQ,CAACQ,0BAA0B,CAACD,WAAD,CAA3B,CAH0C;AAAA,MAG9DE,QAH8D;;AAAA,mBAItDT,QAAQ,CAACM,WAAD,CAJ8C;AAAA,MAI9DI,IAJ8D;;AAMrE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,UAAD;AACF,IAAA,MAAM,EAAED,QADN;AAEF,IAAA,IAAI,EAAEC,IAFJ;AAGF,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE;AADH,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOJ,MAAC,SAAD;AAAW,IAAA,GAAG,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPI,EAQA,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEJ,WAAW,CAACK,GAAZ,CAAgB,UAACC,UAAD;AAAA,aAAgB,CAACA,UAAU,CAACC,QAAZ,EAAsBD,UAAU,CAACE,SAAjC,CAAhB;AAAA,KAAhB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARA,CADA,CADF;AAeD,CArBD;;GAAMd,G;;KAAAA,G;AAuBN,eAAeA,GAAf;;AAEA,SAASO,0BAAT,CAAoCD,WAApC,EAAmE;AACjE,MAAIA,WAAW,IAAIA,WAAW,CAACS,MAA/B,EAAuC;AACrC,WAAO;AAAEC,MAAAA,GAAG,EAAEV,WAAW,CAAC,CAAD,CAAX,CAAeO,QAAtB;AAAgCI,MAAAA,GAAG,EAAEX,WAAW,CAAC,CAAD,CAAX,CAAeQ;AAApD,KAAP;AACD;AACF","sourcesContent":["import React, { useState } from 'react';\nimport { Map as MapLeaflet, TileLayer, Polygon } from 'react-leaflet';\nimport { LatLngExpression } from 'leaflet';\n\nimport Location from '../../models/Location';\n\ntype MapProps = {\n  location: Location;\n  initialZoom?: number;\n};\n\nconst Map = ({ location, initialZoom = 15 }: MapProps): JSX.Element => {\n  const coordinates = location?.coordinates;\n\n  const [position] = useState(mapPositionFromCoordinates(coordinates));\n  const [zoom] = useState(initialZoom);\n\n  return (\n    <div>\n    <MapLeaflet\n  center={position}\n  zoom={zoom}\n  style={{\n    height: '700px',\n  }}\n>\n<TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n    <Polygon positions={coordinates.map((coordinate) => [coordinate.latitude, coordinate.longitude])} />\n</MapLeaflet>\n\n    </div>\n);\n};\n\nexport default Map;\n\nfunction mapPositionFromCoordinates(coordinates): LatLngExpression {\n  if (coordinates && coordinates.length) {\n    return { lat: coordinates[0].latitude, lng: coordinates[0].longitude };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}