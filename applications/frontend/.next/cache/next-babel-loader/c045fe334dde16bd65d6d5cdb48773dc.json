{"ast":null,"code":"var _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Header, Icon, Item as SemanticItem, Container, Button } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport Item from './components/Item';\nexport var __N_SSP = true;\nexport default function Locations(_ref) {\n  var _this = this;\n\n  var locations = _ref.locations;\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: \"map outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), __jsx(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Locations\")), __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/locations/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    primary: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Add Location\")), __jsx(SemanticItem.Group, {\n    divided: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, locations.map(function (location) {\n    return __jsx(Item, {\n      key: location.id,\n      title: location.name,\n      imageSrc: \"/map.svg\",\n      detailsUrl: \"locations/\".concat(location.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    });\n  }))));\n}\n_c = Locations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Locations\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx"],"names":["React","Header","Icon","Item","SemanticItem","Container","Button","Link","Locations","locations","map","location","id","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAI,IAAIC,YAA/B,EAA6CC,SAA7C,EAAwDC,MAAxD,QAAsE,mBAAtE;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAKA,OAAOJ,IAAP,MAAiB,mBAAjB;;AAMA,eAAe,SAASK,SAAT,OAA+D;AAAA;;AAAA,MAA1CC,SAA0C,QAA1CA,SAA0C;AAC5E,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,EAKE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE,MAAC,YAAD,CAAc,KAAd;AAAoB,IAAA,OAAO,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,CAACC,GAAV,CAAc,UAACC,QAAD;AAAA,WACb,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,QAAQ,CAACC,EAApB;AAAwB,MAAA,KAAK,EAAED,QAAQ,CAACE,IAAxC;AAA8C,MAAA,QAAQ,EAAC,UAAvD;AAAkE,MAAA,UAAU,sBAAeF,QAAQ,CAACC,EAAxB,CAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CADH,CAJF,CALF,CADF;AAkBD;KAnBuBJ,S","sourcesContent":["import React from 'react';\nimport { Header, Icon, Item as SemanticItem, Container, Button } from 'semantic-ui-react';\nimport { GetServerSideProps } from 'next';\nimport Link from 'next/link';\n\nimport Location from './models/Location';\nimport getLocations from './queries/getLocations';\n\nimport Item from './components/Item';\n\ntype LocationsProps = {\n  locations: Array<Location>;\n};\n\nexport default function Locations({ locations }: LocationsProps): JSX.Element {\n  return (\n    <>\n      <Header as=\"h1\">\n        <Icon name=\"map outline\" />\n        <Header.Content>Locations</Header.Content>\n      </Header>\n      <Container>\n        <Link href=\"/locations/new\">\n          <Button primary>Add Location</Button>\n        </Link>\n        <SemanticItem.Group divided>\n          {locations.map((location) => (\n            <Item key={location.id} title={location.name} imageSrc=\"/map.svg\" detailsUrl={`locations/${location.id}`} />\n          ))}\n        </SemanticItem.Group>\n      </Container>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async () => {\n  const res = await getLocations();\n\n  return { props: { locations: res.data } };\n};\n"]},"metadata":{},"sourceType":"module"}