{"ast":null,"code":"var _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Header, Icon } from 'semantic-ui-react';\nimport getLocation from './queries/getLocation';\nimport Map from './components/Map';\nimport HarvestList from './components/HarvestList';\nimport getHarvestsByLocationId from './queries/getHarvestsByLocationId';\nexport default function LocationDetails({\n  location,\n  harvests\n}) {\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Icon, {\n    name: \"map outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }), __jsx(Header.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Location\")), __jsx(\"div\", {\n    style: {\n      height: '500px',\n      padding: '0 100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Map, {\n    location: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  })), __jsx(HarvestList, {\n    harvests: harvests,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}\nexport const getServerSideProps = async ({\n  params\n}) => {\n  const resLocation = await getLocation({\n    id: params.id\n  });\n  const resHarvests = await getHarvestsByLocationId({\n    locationId: params.id\n  }); // To-Do: Controls errors\n\n  return {\n    props: {\n      location: resLocation.data,\n      harvests: resHarvests.data\n    }\n  };\n};","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx"],"names":["React","Header","Icon","getLocation","Map","HarvestList","getHarvestsByLocationId","LocationDetails","location","harvests","height","padding","getServerSideProps","params","resLocation","id","resHarvests","locationId","props","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,MAAR,EAAgBC,IAAhB,QAA2B,mBAA3B;AAGA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,uBAAP,MAAoC,mCAApC;AAMA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAzB,EAAoF;AACjG,SACE,4BACE,MAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,EAKE;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EAAE,OADH;AAELC,MAAAA,OAAO,EAAE;AAFJ,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,GAAD;AAAK,IAAA,QAAQ,EAAEH,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CALF,EAaE,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD;AAED,OAAO,MAAMG,kBAAsC,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAC1E,QAAMC,WAAW,GAAG,MAAMX,WAAW,CAAC;AAAEY,IAAAA,EAAE,EAAEF,MAAM,CAACE;AAAb,GAAD,CAArC;AACA,QAAMC,WAAW,GAAG,MAAMV,uBAAuB,CAAC;AAAEW,IAAAA,UAAU,EAAEJ,MAAM,CAACE;AAArB,GAAD,CAAjD,CAF0E,CAG1E;;AACA,SAAO;AAAEG,IAAAA,KAAK,EAAE;AAAEV,MAAAA,QAAQ,EAAEM,WAAW,CAACK,IAAxB;AAA8BV,MAAAA,QAAQ,EAAEO,WAAW,CAACG;AAApD;AAAT,GAAP;AACD,CALM","sourcesContent":["import React from 'react';\nimport { GetServerSideProps } from 'next';\nimport {Header, Icon} from 'semantic-ui-react';\n\nimport Location from './models/Location';\nimport getLocation from './queries/getLocation';\nimport Map from './components/Map';\nimport HarvestList from './components/HarvestList';\nimport getHarvestsByLocationId from './queries/getHarvestsByLocationId';\n\ntype LocationDetailsProps = {\n  location: Location;\n};\n\nexport default function LocationDetails({ location, harvests }: LocationDetailsProps): JSX.Element {\n  return (\n    <>\n      <Header as=\"h1\">\n        <Icon name=\"map outline\" />\n        <Header.Content>Location</Header.Content>\n      </Header>\n      <div\n        style={{\n          height: '500px',\n          padding: '0 100px',\n        }}\n      >\n        <Map location={location} />\n      </div>\n      <HarvestList harvests={harvests} />\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const resLocation = await getLocation({ id: params.id });\n  const resHarvests = await getHarvestsByLocationId({ locationId: params.id });\n  // To-Do: Controls errors\n  return { props: { location: resLocation.data, harvests: resHarvests.data } };\n};\n"]},"metadata":{},"sourceType":"module"}