{"ast":null,"code":"var _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Item as SemanticItem } from 'semantic-ui-react';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport getLocations from './queries/getLocations';\nimport Item from './components/Item';\nexport default function Locations({\n  locations\n}) {\n  return __jsx(SemanticContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(SemanticItem.Group, {\n    divided: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, locations.map(location => __jsx(Item, {\n    key: location.id,\n    title: location.name,\n    imageSrc: \"/map.svg\",\n    detailsUrl: `locations/${location.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }))));\n}\nexport const getServerSideProps = async () => {\n  const res = await getLocations();\n  return {\n    props: {\n      locations: res.data\n    }\n  };\n};","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx"],"names":["React","Item","SemanticItem","Container","SemanticContainer","getLocations","Locations","locations","map","location","id","name","getServerSideProps","res","props","data"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,YAAjB,QAAqC,mBAArC;AACA,SAASC,SAAS,IAAIC,iBAAtB,QAA+C,mBAA/C;AAIA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,OAAOJ,IAAP,MAAiB,mBAAjB;AAMA,eAAe,SAASK,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA+D;AAC5E,SACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD,CAAc,KAAd;AAAoB,IAAA,OAAO,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,SAAS,CAACC,GAAV,CAAeC,QAAD,IACb,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAApB;AAAwB,IAAA,KAAK,EAAED,QAAQ,CAACE,IAAxC;AAA8C,IAAA,QAAQ,EAAC,UAAvD;AAAkE,IAAA,UAAU,EAAG,aAAYF,QAAQ,CAACC,EAAG,EAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CADF;AASD;AAED,OAAO,MAAME,kBAAsC,GAAG,YAAY;AAChE,QAAMC,GAAG,GAAG,MAAMR,YAAY,EAA9B;AAEA,SAAO;AAAES,IAAAA,KAAK,EAAE;AAAEP,MAAAA,SAAS,EAAEM,GAAG,CAACE;AAAjB;AAAT,GAAP;AACD,CAJM","sourcesContent":["import React from 'react';\nimport { Item as SemanticItem } from 'semantic-ui-react';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport { GetServerSideProps } from 'next';\n\nimport Location from './models/Location';\nimport getLocations from './queries/getLocations';\n\nimport Item from './components/Item';\n\ntype LocationsProps = {\n  locations: Array<Location>;\n};\n\nexport default function Locations({ locations }: LocationsProps): JSX.Element {\n  return (\n    <SemanticContainer>\n      <SemanticItem.Group divided>\n        {locations.map((location) => (\n          <Item key={location.id} title={location.name} imageSrc=\"/map.svg\" detailsUrl={`locations/${location.id}`} />\n        ))}\n      </SemanticItem.Group>\n    </SemanticContainer>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async () => {\n  const res = await getLocations();\n\n  return { props: { locations: res.data } };\n};\n"]},"metadata":{},"sourceType":"module"}