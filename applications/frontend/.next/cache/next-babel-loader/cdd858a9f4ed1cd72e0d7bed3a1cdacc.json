{"ast":null,"code":"var _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Map as Mapp, TileLayer } from 'react-leaflet';\nvar center = [51.505, -0.09];\nvar polygon = [[51.515, -0.09], [51.52, -0.1], [51.52, -0.12]];\nvar multiPolygon = [[[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]], [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]]]; // const DynamicComponentWithNoSSR = dynamic(() => import('./components/Map'), { ssr: false });\n\nexport var __N_SSP = true;\nexport default function LocationDetails(_ref) {\n  var location = _ref.location;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(Mapp, {\n    center: center,\n    zoom: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n}\n_c = LocationDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationDetails\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx"],"names":["React","Map","Mapp","TileLayer","center","polygon","multiPolygon","LocationDetails","location"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AAKA,SAASC,GAAG,IAAIC,IAAhB,EAAsBC,SAAtB,QAA6E,eAA7E;AAYA,IAAMC,MAAM,GAAG,CAAC,MAAD,EAAS,CAAC,IAAV,CAAf;AAEA,IAAMC,OAAO,GAAG,CACd,CAAC,MAAD,EAAS,CAAC,IAAV,CADc,EAEd,CAAC,KAAD,EAAQ,CAAC,GAAT,CAFc,EAGd,CAAC,KAAD,EAAQ,CAAC,IAAT,CAHc,CAAhB;AAMA,IAAMC,YAAY,GAAG,CACnB,CACE,CAAC,KAAD,EAAQ,CAAC,IAAT,CADF,EAEE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAFF,EAGE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAHF,CADmB,EAMnB,CACE,CAAC,KAAD,EAAQ,CAAC,IAAT,CADF,EAEE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAFF,EAGE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAHF,CANmB,CAArB,C,CAaA;;;AAEA,eAAe,SAASC,eAAT,OAAmE;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;AAChF,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,MAAM,EAAEJ,MAAd;AAAsB,IAAA,IAAI,EAAE,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,WAAW,EAAC,2EADd;AAEE,IAAA,GAAG,EAAC,oDAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AA+BD;KAhCuBG,e","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Item as SemanticItem } from 'semantic-ui-react';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport { GetServerSideProps } from 'next';\nimport Head from 'next/head';\nimport { Map as Mapp, TileLayer, Polygon, CircleMarker, Circle, Popup } from 'react-leaflet';\n\nimport dynamic from 'next/dynamic';\nimport Location from './models/Location';\nimport getLocation from './queries/getLocation';\n\nimport Item from './components/Item';\n\ntype LocationProps = {\n  location: Location;\n};\n\nconst center = [51.505, -0.09];\n\nconst polygon = [\n  [51.515, -0.09],\n  [51.52, -0.1],\n  [51.52, -0.12],\n];\n\nconst multiPolygon = [\n  [\n    [51.51, -0.12],\n    [51.51, -0.13],\n    [51.53, -0.13],\n  ],\n  [\n    [51.51, -0.05],\n    [51.51, -0.07],\n    [51.53, -0.07],\n  ],\n];\n\n// const DynamicComponentWithNoSSR = dynamic(() => import('./components/Map'), { ssr: false });\n\nexport default function LocationDetails({ location }: LocationProps): JSX.Element {\n  return (\n    <div>\n      <Mapp center={center} zoom={13}>\n        <TileLayer\n          attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n      </Mapp>\n      {/*{isBrowser && (*/}\n      {/*  <Map center={center} zoom={13}>*/}\n      {/*    <TileLayer*/}\n      {/*      attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'*/}\n      {/*      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"*/}\n      {/*    />*/}\n      {/*    <Circle center={center} fillColor=\"blue\" radius={200} />*/}\n      {/*    <CircleMarker center={[51.51, -0.12]} color=\"red\" radius={20}>*/}\n      {/*      <Popup>Popup in CircleMarker</Popup>*/}\n      {/*    </CircleMarker>*/}\n      {/*    <Polygon color=\"purple\" positions={polygon} />*/}\n      {/*    <Polygon color=\"purple\" positions={multiPolygon} />*/}\n      {/*  </Map>*/}\n      {/*)}*/}\n\n      {/*<SemanticContainer>*/}\n      {/*  <SemanticItem.Group divided>*/}\n      {/*    {<Item key={location.id} title={location.name} imageSrc=\"/map.svg\" detailsUrl={`location/${location.id}`} />}*/}\n      {/*  </SemanticItem.Group>*/}\n      {/*</SemanticContainer>*/}\n      {/*<DynamicComponentWithNoSSR />*/}\n    </div>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const res = await getLocation({ id: params.id });\n\n  return { props: { location: res.data } };\n};\n"]},"metadata":{},"sourceType":"module"}