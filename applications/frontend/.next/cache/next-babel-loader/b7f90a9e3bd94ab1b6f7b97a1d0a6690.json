{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/components/Map/Map.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Map as MapLeaflet, TileLayer, Polygon, FeatureGroup } from 'react-leaflet';\nimport { EditControl } from 'react-leaflet-draw';\nimport styles from './map.module.css';\n\nfunction mapPositionFromArea(area) {\n  if (area && area.length) {\n    return {\n      lat: area[0].latitude,\n      lng: area[0].longitude\n    };\n  }\n}\n\nvar Map = function Map(_ref) {\n  _s();\n\n  var _ref$mode = _ref.mode,\n      mode = _ref$mode === void 0 ? 'view' : _ref$mode,\n      location = _ref.location,\n      _ref$initialZoom = _ref.initialZoom,\n      initialZoom = _ref$initialZoom === void 0 ? 15 : _ref$initialZoom,\n      onLocationCreated = _ref.onLocationCreated;\n  var initialPosition = mapPositionFromArea(location === null || location === void 0 ? void 0 : location.area) || {\n    lat: 42.829022,\n    lng: -4.849545\n  };\n\n  var _useState = useState(initialPosition),\n      position = _useState[0];\n\n  var _useState2 = useState(initialZoom),\n      zoom = _useState2[0];\n\n  var renderEditionMode = function renderEditionMode(mode) {\n    if (mode !== 'edit') {\n      return null;\n    }\n\n    var handleOnCreate = function handleOnCreate(event) {\n      var _event$layer, _event$layer$editing;\n\n      onLocationCreated((_event$layer = event.layer) === null || _event$layer === void 0 ? void 0 : (_event$layer$editing = _event$layer.editing) === null || _event$layer$editing === void 0 ? void 0 : _event$layer$editing.latlngs);\n    };\n\n    return __jsx(FeatureGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, __jsx(EditControl, {\n      position: \"topright\",\n      draw: {\n        rectangle: false,\n        circle: false,\n        marker: false,\n        circlemarker: false,\n        polyline: false\n      },\n      onCreated: handleOnCreate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderLocation = function renderLocation(location) {\n    if (!location) {\n      return null;\n    }\n\n    var area = location === null || location === void 0 ? void 0 : location.area;\n    return __jsx(Polygon, {\n      positions: area.map(function (coordinate) {\n        return [coordinate.latitude, coordinate.longitude];\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return __jsx(MapLeaflet, {\n    className: styles.container,\n    center: position,\n    zoom: zoom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(TileLayer, {\n    url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), renderEditionMode(mode), renderLocation(location));\n};\n\n_s(Map, \"BIeMiJgf2j1JF+FQEi04qt0NgfI=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/components/Map/Map.tsx"],"names":["React","useState","Map","MapLeaflet","TileLayer","Polygon","FeatureGroup","EditControl","styles","mapPositionFromArea","area","length","lat","latitude","lng","longitude","mode","location","initialZoom","onLocationCreated","initialPosition","position","zoom","renderEditionMode","handleOnCreate","event","layer","editing","latlngs","rectangle","circle","marker","circlemarker","polyline","renderLocation","map","coordinate","container"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Map as MapLeaflet, TileLayer, Polygon, FeatureGroup } from 'react-leaflet';\nimport { LatLngExpression } from 'leaflet';\nimport { EditControl } from 'react-leaflet-draw';\n\nimport Location from '../../models/Location';\n\nimport styles from './map.module.css';\n\ntype MapProps = {\n  mode?: string;\n  location?: Location;\n  initialZoom?: number;\n  onLocationCreated?: (latlngs: Array) => void;\n};\n\nfunction mapPositionFromArea(area): LatLngExpression {\n  if (area && area.length) {\n    return { lat: area[0].latitude, lng: area[0].longitude };\n  }\n}\n\nconst Map = ({ mode = 'view', location, initialZoom = 15, onLocationCreated }: MapProps): JSX.Element => {\n  const initialPosition = mapPositionFromArea(location?.area) || { lat: 42.829022, lng: -4.849545 };\n\n  const [position] = useState(initialPosition);\n  const [zoom] = useState(initialZoom);\n\n  const renderEditionMode = (mode): JSX.Element => {\n    if (mode !== 'edit') {\n      return null;\n    }\n    const handleOnCreate = (event): void => {\n      onLocationCreated(event.layer?.editing?.latlngs);\n    };\n\n    return (\n      <FeatureGroup>\n        <EditControl\n          position=\"topright\"\n          draw={{\n            rectangle: false,\n            circle: false,\n            marker: false,\n            circlemarker: false,\n            polyline: false,\n          }}\n          onCreated={handleOnCreate}\n        />\n      </FeatureGroup>\n    );\n  };\n\n  const renderLocation = (location): JSX.Element => {\n    if (!location) {\n      return null;\n    }\n\n    const area = location?.area;\n\n    return <Polygon positions={area.map((coordinate) => [coordinate.latitude, coordinate.longitude])} />;\n  };\n\n  return (\n    <MapLeaflet className={styles.container} center={position} zoom={zoom}>\n      <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" />\n      {renderEditionMode(mode)}\n      {renderLocation(location)}\n    </MapLeaflet>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}