{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/sergiosanchez/Projects/fungus/applications/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sergiosanchez/Projects/fungus/applications/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/predictions/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Container, Form, Select, Header as SemanticHeader, Dimmer, Icon } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport { withClientAuthRequired } from '../../authentication/withAuthRequired';\nimport makePrediction from '../../fetching/makePrediction';\nimport Header, { ActivePage } from '../../components/Header';\nimport useMyLocations from '../../fetching/useMyLocations';\nimport MushroomsSelector from '../../components/MushroomsSelector';\n\nfunction Predictions() {\n  _s();\n\n  var router = useRouter();\n\n  var _useMyLocations = useMyLocations(),\n      locations = _useMyLocations.locations,\n      isLoadingLocations = _useMyLocations.isLoading,\n      errorLocations = _useMyLocations.error;\n\n  var _useState = useState(''),\n      date = _useState[0],\n      setDate = _useState[1];\n\n  var _useState2 = useState(router.query.locationId),\n      locationId = _useState2[0],\n      setLocationId = _useState2[1];\n\n  var _useState3 = useState(''),\n      mushroomId = _useState3[0],\n      setMushroomId = _useState3[1];\n\n  var _useState4 = useState(''),\n      prediction = _useState4[0],\n      setPrediction = _useState4[1];\n\n  var _useState5 = useState(false),\n      active = _useState5[0],\n      setActive = _useState5[1];\n\n  var handleOnSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _response$data;\n\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return makePrediction({\n                date: date,\n                locationId: locationId,\n                mushroomId: mushroomId\n              });\n\n            case 2:\n              response = _context.sent;\n              setPrediction(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.probability);\n              setActive(true);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleOnSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    return setActive(false);\n  };\n\n  var handleOnChangeLocation = function handleOnChangeLocation(_, data) {\n    setLocationId(data.value);\n    router.push(\"predictions/?locationId=\".concat(data.value), undefined, {\n      shallow: true\n    });\n  };\n\n  function transformLocationsInOptions() {\n    return locations === null || locations === void 0 ? void 0 : locations.map(function (location) {\n      return {\n        key: location.id,\n        value: location.id,\n        text: location.name\n      };\n    });\n  }\n\n  if (errorLocations) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading failed: \", errorLocations.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoadingLocations) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      activePage: ActivePage.predictions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\xBFCu\\xE1ndo?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            onChange: function onChange(e) {\n              return setDate(e.target.value);\n            },\n            placeholder: \"Introduce fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: /*#__PURE__*/_jsxDEV(MushroomsSelector, {\n            onSelect: setMushroomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\xBFPara qu\\xE9 localizaci\\xF3n?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Seleciona localizaci\\xF3n\",\n            options: transformLocationsInOptions(),\n            onChange: handleOnChangeLocation,\n            value: locationId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          floated: 'right',\n          type: \"submit\",\n          primary: true,\n          children: \"Mostrar predicci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dimmer, {\n        active: active,\n        onClickOutside: handleClose,\n        page: true,\n        children: /*#__PURE__*/_jsxDEV(SemanticHeader, {\n          as: \"h2\",\n          icon: true,\n          inverted: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"heart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SemanticHeader.Subheader, {\n            children: prediction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Predictions, \"yhPFStQJPMGD9mtmmysGGj1W7kI=\", false, function () {\n  return [useRouter, useMyLocations];\n});\n\n_c = Predictions;\nexport default _c2 = withClientAuthRequired(Predictions);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Predictions\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/predictions/index.tsx"],"names":["React","useState","Button","Container","Form","Select","Header","SemanticHeader","Dimmer","Icon","useRouter","withClientAuthRequired","makePrediction","ActivePage","useMyLocations","MushroomsSelector","Predictions","router","locations","isLoadingLocations","isLoading","errorLocations","error","date","setDate","query","locationId","setLocationId","mushroomId","setMushroomId","prediction","setPrediction","active","setActive","handleOnSubmit","response","data","probability","handleClose","handleOnChangeLocation","_","value","push","undefined","shallow","transformLocationsInOptions","map","location","key","id","text","name","message","predictions","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Container, Form, Select, Header as SemanticHeader, Dimmer, Icon } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\n\nimport { withClientAuthRequired } from '../../authentication/withAuthRequired';\n\nimport makePrediction from '../../fetching/makePrediction';\nimport Header, { ActivePage } from '../../components/Header';\nimport useMyLocations from '../../fetching/useMyLocations';\nimport MushroomsSelector from '../../components/MushroomsSelector';\n\nfunction Predictions(): JSX.Element {\n  const router = useRouter();\n\n  const { locations, isLoading: isLoadingLocations, error: errorLocations } = useMyLocations();\n\n  const [date, setDate] = useState('');\n  const [locationId, setLocationId] = useState(router.query.locationId);\n  const [mushroomId, setMushroomId] = useState('');\n  const [prediction, setPrediction] = useState('');\n  const [active, setActive] = useState(false);\n\n  const handleOnSubmit = async () => {\n    const response = await makePrediction({ date, locationId, mushroomId });\n\n    setPrediction(response?.data?.probability);\n\n    setActive(true);\n  };\n\n  const handleClose = (): void => setActive(false);\n\n  const handleOnChangeLocation = (_, data): void => {\n    setLocationId(data.value);\n\n    router.push(`predictions/?locationId=${data.value}`, undefined, { shallow: true });\n  };\n\n  function transformLocationsInOptions() {\n    return locations?.map((location) => ({ key: location.id, value: location.id, text: location.name }));\n  }\n\n  if (errorLocations) {\n    return <div>Loading failed: {errorLocations.message}</div>;\n  }\n\n  if (isLoadingLocations) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Header activePage={ActivePage.predictions} />\n      <Container>\n        <Form onSubmit={handleOnSubmit}>\n          <Form.Field>\n            <label>¿Cuándo?</label>\n            <input type=\"date\" onChange={(e): void => setDate(e.target.value)} placeholder=\"Introduce fecha\" />\n          </Form.Field>\n          <Form.Field>\n            <MushroomsSelector onSelect={setMushroomId} />\n          </Form.Field>\n          <Form.Field>\n            <label>¿Para qué localización?</label>\n            <Select\n              placeholder=\"Seleciona localización\"\n              options={transformLocationsInOptions()}\n              onChange={handleOnChangeLocation}\n              value={locationId}\n            />\n          </Form.Field>\n          <Button floated={'right'} type=\"submit\" primary>\n            Mostrar predicción\n          </Button>\n        </Form>\n        <Dimmer active={active} onClickOutside={handleClose} page>\n          <SemanticHeader as=\"h2\" icon inverted>\n            <Icon name=\"heart\" />\n            <SemanticHeader.Subheader>{prediction}</SemanticHeader.Subheader>\n          </SemanticHeader>\n        </Dimmer>\n      </Container>\n    </>\n  );\n}\n\nexport default withClientAuthRequired(Predictions);\n"]},"metadata":{},"sourceType":"module"}