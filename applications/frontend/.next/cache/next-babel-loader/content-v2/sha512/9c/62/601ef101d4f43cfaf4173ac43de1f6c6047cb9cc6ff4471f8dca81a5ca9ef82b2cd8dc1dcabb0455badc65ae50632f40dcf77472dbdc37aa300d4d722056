{"ast":null,"code":"import { getAccessToken, withApiAuthRequired } from '@auth0/nextjs-auth0';\nimport BackendClient from '../../../fetching/BackendClient';\nexport default withApiAuthRequired(async function (req, res) {\n  try {\n    const id = req.query.id;\n    const body = JSON.parse(req.body);\n    console.log(\"BODY\", body);\n    const {\n      accessToken\n    } = await getAccessToken(req, res);\n    const response = await BackendClient.put({\n      path: `/harvests/${id}`,\n      body,\n      accessToken\n    });\n    res.status(response.status);\n  } catch (error) {\n    // To-Do Custom error cuando la harvest no se ha podido añadir\n    console.error(error);\n    res.status(error.status || 500).end(error.message);\n  }\n});","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/api/harvests/[id].ts"],"names":["getAccessToken","withApiAuthRequired","BackendClient","req","res","id","query","body","JSON","parse","console","log","accessToken","response","put","path","status","error","end","message"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,mBAAzB,QAAoD,qBAApD;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,eAAeD,mBAAmB,CAAC,gBAAgBE,GAAhB,EAAqBC,GAArB,EAA0B;AAC3D,MAAI;AACF,UAAMC,EAAE,GAAGF,GAAG,CAACG,KAAJ,CAAUD,EAArB;AACA,UAAME,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,GAAG,CAACI,IAAf,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBJ,IAAnB;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAkB,MAAMZ,cAAc,CAACG,GAAD,EAAMC,GAAN,CAA5C;AAEA,UAAMS,QAAQ,GAAG,MAAMX,aAAa,CAACY,GAAd,CAAkB;AAAEC,MAAAA,IAAI,EAAG,aAAYV,EAAG,EAAxB;AAA2BE,MAAAA,IAA3B;AAAiCK,MAAAA;AAAjC,KAAlB,CAAvB;AAEAR,IAAAA,GAAG,CAACY,MAAJ,CAAWH,QAAQ,CAACG,MAApB;AACD,GATD,CASE,OAAOC,KAAP,EAAc;AACd;AACAP,IAAAA,OAAO,CAACO,KAAR,CAAcA,KAAd;AACAb,IAAAA,GAAG,CAACY,MAAJ,CAAWC,KAAK,CAACD,MAAN,IAAgB,GAA3B,EAAgCE,GAAhC,CAAoCD,KAAK,CAACE,OAA1C;AACD;AACF,CAfiC,CAAlC","sourcesContent":["import { getAccessToken, withApiAuthRequired } from '@auth0/nextjs-auth0';\nimport BackendClient from '../../../fetching/BackendClient';\n\nexport default withApiAuthRequired(async function (req, res) {\n  try {\n    const id = req.query.id;\n    const body = JSON.parse(req.body);\n    console.log(\"BODY\",body);\n    const { accessToken } = await getAccessToken(req, res);\n\n    const response = await BackendClient.put({ path: `/harvests/${id}`, body, accessToken });\n\n    res.status(response.status);\n  } catch (error) {\n    // To-Do Custom error cuando la harvest no se ha podido añadir\n    console.error(error);\n    res.status(error.status || 500).end(error.message);\n  }\n});\n"]},"metadata":{},"sourceType":"module"}