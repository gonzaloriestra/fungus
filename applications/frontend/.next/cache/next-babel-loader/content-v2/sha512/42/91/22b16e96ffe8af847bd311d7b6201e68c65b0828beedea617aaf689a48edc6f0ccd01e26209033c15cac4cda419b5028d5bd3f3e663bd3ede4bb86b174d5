{"ast":null,"code":"import { getAccessToken, withApiAuthRequired } from '@auth0/nextjs-auth0';\nexport default withApiAuthRequired(async function (req, res) {\n  try {\n    const id = req.query.mushroomId;\n    console.log('IDDD', id);\n    const {\n      accessToken\n    } = await getAccessToken(req, res); // const response = await BackendClient.put({ path: `/harvests/${id}`, body, accessToken });\n\n    res.status(200).end();\n  } catch (error) {\n    // To-Do Custom error cuando la harvest no se ha podido añadir\n    console.error(error);\n    res.status(error.status || 500).end(error.message);\n  }\n});","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/api/locations/index.ts"],"names":["getAccessToken","withApiAuthRequired","req","res","id","query","mushroomId","console","log","accessToken","status","end","error","message"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,mBAAzB,QAAoD,qBAApD;AAIA,eAAeA,mBAAmB,CAAC,gBAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;AAC3D,MAAI;AACF,UAAMC,EAAE,GAAGF,GAAG,CAACG,KAAJ,CAAUC,UAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,EAApB;AAEA,UAAM;AAAEK,MAAAA;AAAF,QAAkB,MAAMT,cAAc,CAACE,GAAD,EAAMC,GAAN,CAA5C,CAJE,CAMF;;AAEAA,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACD,GATD,CASE,OAAOC,KAAP,EAAc;AACd;AACAL,IAAAA,OAAO,CAACK,KAAR,CAAcA,KAAd;AACAT,IAAAA,GAAG,CAACO,MAAJ,CAAWE,KAAK,CAACF,MAAN,IAAgB,GAA3B,EAAgCC,GAAhC,CAAoCC,KAAK,CAACC,OAA1C;AACD;AACF,CAfiC,CAAlC","sourcesContent":["import { getAccessToken, withApiAuthRequired } from '@auth0/nextjs-auth0';\n\nimport BackendClient from '../../../commands/BackendClient';\n\nexport default withApiAuthRequired(async function (req, res) {\n  try {\n    const id = req.query.mushroomId;\n    console.log('IDDD', id);\n\n    const { accessToken } = await getAccessToken(req, res);\n\n    // const response = await BackendClient.put({ path: `/harvests/${id}`, body, accessToken });\n\n    res.status(200).end();\n  } catch (error) {\n    // To-Do Custom error cuando la harvest no se ha podido añadir\n    console.error(error);\n    res.status(error.status || 500).end(error.message);\n  }\n});\n"]},"metadata":{},"sourceType":"module"}