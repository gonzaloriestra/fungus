{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx\";\nimport React from 'react';\nimport { Button, Header, Icon } from 'semantic-ui-react';\nimport { withServerAuthRequired } from '../../authentication/withAuthRequired';\nimport getLocation from './queries/getLocation';\nimport Map from './components/Map';\nimport HarvestList from './components/HarvestList';\nimport getHarvestsByLocationId from './queries/getHarvestsByLocationId';\nimport Link from 'next/link';\nexport default function LocationDetails({\n  location,\n  harvests\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"map outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '500px',\n        padding: '0 100px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        location: location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"calendar alternate outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: \"Harvests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HarvestList, {\n      harvests: harvests\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: `/harvests/new?locationId=${location.id}`,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        children: \"Add Harvest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport const getServerSideProps = withServerAuthRequired(async ({\n  params\n}) => {\n  const resLocation = await getLocation({\n    id: params.id\n  });\n  let harvests;\n\n  try {\n    const resHarvests = await getHarvestsByLocationId({\n      locationId: params.id\n    });\n    harvests = resHarvests === null || resHarvests === void 0 ? void 0 : resHarvests.data;\n  } catch (error) {\n    harvests = [];\n  } // To-Do: Controls errors\n\n\n  return {\n    props: {\n      location: resLocation.data,\n      harvests\n    }\n  };\n});","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx"],"names":["React","Button","Header","Icon","withServerAuthRequired","getLocation","Map","HarvestList","getHarvestsByLocationId","Link","LocationDetails","location","harvests","height","padding","id","getServerSideProps","params","resLocation","resHarvests","locationId","data","error","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,QAAqC,mBAArC;AAEA,SAASC,sBAAT,QAAuC,uCAAvC;AAGA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,uBAAP,MAAoC,mCAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAMA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAzB,EAAoF;AACjG,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,OADH;AAELC,QAAAA,OAAO,EAAE;AAFJ,OADT;AAAA,6BAME,QAAC,GAAD;AAAK,QAAA,QAAQ,EAAEH;AAAf;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YALF,eAaE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAiBE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAjBF,eAkBE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAG,4BAA2BD,QAAQ,CAACI,EAAG,EAApD;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA,kBADF;AAwBD;AAED,OAAO,MAAMC,kBAAsC,GAAGZ,sBAAsB,CAAC,OAAO;AAAEa,EAAAA;AAAF,CAAP,KAAsB;AACjG,QAAMC,WAAW,GAAG,MAAMb,WAAW,CAAC;AAAEU,IAAAA,EAAE,EAAEE,MAAM,CAACF;AAAb,GAAD,CAArC;AAEA,MAAIH,QAAJ;;AACA,MAAI;AACF,UAAMO,WAAW,GAAG,MAAMX,uBAAuB,CAAC;AAAEY,MAAAA,UAAU,EAAEH,MAAM,CAACF;AAArB,KAAD,CAAjD;AACAH,IAAAA,QAAQ,GAAGO,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEE,IAAxB;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdV,IAAAA,QAAQ,GAAG,EAAX;AACD,GATgG,CAWjG;;;AACA,SAAO;AAAEW,IAAAA,KAAK,EAAE;AAAEZ,MAAAA,QAAQ,EAAEO,WAAW,CAACG,IAAxB;AAA8BT,MAAAA;AAA9B;AAAT,GAAP;AACD,CAb2E,CAArE","sourcesContent":["import React from 'react';\nimport { GetServerSideProps } from 'next';\nimport { Button, Header, Icon } from 'semantic-ui-react';\n\nimport { withServerAuthRequired } from '../../authentication/withAuthRequired';\n\nimport Location from './models/Location';\nimport getLocation from './queries/getLocation';\nimport Map from './components/Map';\nimport HarvestList from './components/HarvestList';\nimport getHarvestsByLocationId from './queries/getHarvestsByLocationId';\nimport Link from 'next/link';\n\ntype LocationDetailsProps = {\n  location: Location;\n};\n\nexport default function LocationDetails({ location, harvests }: LocationDetailsProps): JSX.Element {\n  return (\n    <>\n      <Header as=\"h1\">\n        <Icon name=\"map outline\" />\n        <Header.Content>Location</Header.Content>\n      </Header>\n      <div\n        style={{\n          height: '500px',\n          padding: '0 100px',\n        }}\n      >\n        <Map location={location} />\n      </div>\n      <Header as=\"h2\">\n        <Icon name=\"calendar alternate outline\" />\n        <Header.Content>Harvests</Header.Content>\n      </Header>\n      <HarvestList harvests={harvests} />\n      <Link href={`/harvests/new?locationId=${location.id}`}>\n        <Button primary>Add Harvest</Button>\n      </Link>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = withServerAuthRequired(async ({ params }) => {\n  const resLocation = await getLocation({ id: params.id });\n\n  let harvests;\n  try {\n    const resHarvests = await getHarvestsByLocationId({ locationId: params.id });\n    harvests = resHarvests?.data;\n  } catch (error) {\n    harvests = [];\n  }\n\n  // To-Do: Controls errors\n  return { props: { location: resLocation.data, harvests } };\n});\n"]},"metadata":{},"sourceType":"module"}