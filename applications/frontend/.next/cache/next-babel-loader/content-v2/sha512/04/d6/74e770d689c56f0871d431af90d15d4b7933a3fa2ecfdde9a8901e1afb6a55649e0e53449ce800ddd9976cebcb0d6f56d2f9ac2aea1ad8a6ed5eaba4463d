{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx\";\nimport React from 'react';\nimport { Header, Icon, Item as SemanticItem, Container, Button } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport { withClientAuthRequired } from '../../authentication/withAuthRequired';\nimport Item from './components/Item';\n\nasync function fetcher(url) {\n  const res = await fetch(url);\n\n  if (!res.ok) {\n    throw Error(\"Yo that's NOT OK!!!\");\n  }\n\n  return await res.json();\n}\n\nfunction Locations() {\n  const result = useSWR(`/api/me/locations`, fetcher);\n  const locations = result.data;\n  const error = result.error;\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading failed: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(result);\n\n  if (!locations) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"map outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: \"Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/locations/new\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          children: \"Add Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SemanticItem.Group, {\n        divided: true,\n        children: locations.map(location => /*#__PURE__*/_jsxDEV(Item, {\n          title: location.name,\n          imageSrc: \"/map.svg\",\n          detailsUrl: `locations/${location.id}`\n        }, location.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport default withClientAuthRequired(Locations);","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx"],"names":["React","Header","Icon","Item","SemanticItem","Container","Button","Link","useSWR","withClientAuthRequired","fetcher","url","res","fetch","ok","Error","json","Locations","result","locations","data","error","message","console","log","map","location","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAI,IAAIC,YAA/B,EAA6CC,SAA7C,EAAwDC,MAAxD,QAAsE,mBAAtE;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,SAASC,sBAAT,QAAuC,uCAAvC;AAIA,OAAON,IAAP,MAAiB,mBAAjB;;AAEA,eAAeO,OAAf,CAAuBC,GAAvB,EAAoC;AAClC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAvB;;AAEA,MAAI,CAACC,GAAG,CAACE,EAAT,EAAa;AACX,UAAMC,KAAK,CAAC,qBAAD,CAAX;AACD;;AAED,SAAO,MAAMH,GAAG,CAACI,IAAJ,EAAb;AACD;;AAED,SAASC,SAAT,GAAkC;AAChC,QAAMC,MAAM,GAAGV,MAAM,CAAE,mBAAF,EAAsBE,OAAtB,CAArB;AACA,QAAMS,SAA0B,GAAGD,MAAM,CAACE,IAA1C;AACA,QAAMC,KAAY,GAAGH,MAAM,CAACG,KAA5B;;AAEA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,qCAAsBA,KAAK,CAACC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;;AACA,MAAI,CAACC,SAAL,EAAgB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,SAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,gBAAX;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD,CAAc,KAAd;AAAoB,QAAA,OAAO,MAA3B;AAAA,kBACGA,SAAS,CAACM,GAAV,CAAeC,QAAD,iBACb,QAAC,IAAD;AAAwB,UAAA,KAAK,EAAEA,QAAQ,CAACC,IAAxC;AAA8C,UAAA,QAAQ,EAAC,UAAvD;AAAkE,UAAA,UAAU,EAAG,aAAYD,QAAQ,CAACE,EAAG;AAAvG,WAAWF,QAAQ,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAkBD;;AAED,eAAenB,sBAAsB,CAACQ,SAAD,CAArC","sourcesContent":["import React from 'react';\nimport { Header, Icon, Item as SemanticItem, Container, Button } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport useSWR from 'swr';\n\nimport { withClientAuthRequired } from '../../authentication/withAuthRequired';\n\nimport Location from './models/Location';\n\nimport Item from './components/Item';\n\nasync function fetcher(url: string) {\n  const res = await fetch(url);\n\n  if (!res.ok) {\n    throw Error(\"Yo that's NOT OK!!!\");\n  }\n\n  return await res.json();\n}\n\nfunction Locations(): JSX.Element {\n  const result = useSWR(`/api/me/locations`, fetcher);\n  const locations: Array<Location> = result.data;\n  const error: Error = result.error;\n\n  if (error) {\n    return <div>Loading failed: {error.message}</div>;\n  }\n  console.log(result);\n  if (!locations) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Header as=\"h1\">\n        <Icon name=\"map outline\" />\n        <Header.Content>Locations</Header.Content>\n      </Header>\n      <Container>\n        <Link href=\"/locations/new\">\n          <Button primary>Add Location</Button>\n        </Link>\n        <SemanticItem.Group divided>\n          {locations.map((location) => (\n            <Item key={location.id} title={location.name} imageSrc=\"/map.svg\" detailsUrl={`locations/${location.id}`} />\n          ))}\n        </SemanticItem.Group>\n      </Container>\n    </>\n  );\n}\n\nexport default withClientAuthRequired(Locations);\n"]},"metadata":{},"sourceType":"module"}