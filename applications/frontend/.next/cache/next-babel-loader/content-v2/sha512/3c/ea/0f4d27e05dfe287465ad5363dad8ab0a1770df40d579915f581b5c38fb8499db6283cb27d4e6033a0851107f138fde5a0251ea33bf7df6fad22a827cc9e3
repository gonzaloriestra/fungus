{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/sergiosanchez/Projects/fungus/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sergiosanchez/Projects/fungus/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Header, Icon, Item as SemanticItem, Container, Button } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport { withClientAuthRequired } from '../../authentication/withAuthRequired';\nimport Item from './components/Item';\n\nvar fetcher = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            debugger;\n            _context.next = 3;\n            return fetch(url);\n\n          case 3:\n            res = _context.sent;\n            debugger;\n\n            if (res.ok) {\n              _context.next = 7;\n              break;\n            }\n\n            throw Error(\"Yo that's NOT OK!!!\");\n\n          case 7:\n            _context.next = 9;\n            return res.json();\n\n          case 9:\n            data = _context.sent;\n            return _context.abrupt(\"return\", data);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetcher(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction Locations() {\n  _s();\n\n  var _this = this;\n\n  var result = useSWR(\"/api/me/locations\", fetcher);\n  var locations = result.data;\n  var error = result.error;\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading failed: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(result);\n\n  if (!locations) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"map outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: \"Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/locations/new\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          children: \"Add Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SemanticItem.Group, {\n        divided: true,\n        children: locations.map(function (location) {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            title: location.name,\n            imageSrc: \"/map.svg\",\n            detailsUrl: \"locations/\".concat(location.id)\n          }, location.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Locations, \"NOnZQl9n1uJkdTCHetkSuu6Wp+Y=\", false, function () {\n  return [useSWR];\n});\n\n_c = Locations;\nexport default _c2 = withClientAuthRequired(Locations);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Locations\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx"],"names":["React","Header","Icon","Item","SemanticItem","Container","Button","Link","useSWR","withClientAuthRequired","fetcher","url","fetch","res","ok","Error","json","data","Locations","result","locations","error","message","console","log","map","location","name","id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAI,IAAIC,YAA/B,EAA6CC,SAA7C,EAAwDC,MAAxD,QAAsE,mBAAtE;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,SAASC,sBAAT,QAAuC,uCAAvC;AAIA,OAAON,IAAP,MAAiB,mBAAjB;;AAMA,IAAMO,OAAO;AAAA,sEAAG,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACd;AADc;AAAA,mBAEIC,KAAK,CAACD,GAAD,CAFT;;AAAA;AAERE,YAAAA,GAFQ;AAGd;;AAHc,gBAITA,GAAG,CAACC,EAJK;AAAA;AAAA;AAAA;;AAAA,kBAKNC,KAAK,CAAC,qBAAD,CALC;;AAAA;AAAA;AAAA,mBAOsBF,GAAG,CAACG,IAAJ,EAPtB;;AAAA;AAORC,YAAAA,IAPQ;AAAA,6CAQPA,IARO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPP,OAAO;AAAA;AAAA;AAAA,GAAb;;AAWA,SAASQ,SAAT,GAAkC;AAAA;;AAAA;;AAChC,MAAMC,MAAM,GAAGX,MAAM,sBAAsBE,OAAtB,CAArB;AACA,MAAMU,SAA0B,GAAGD,MAAM,CAACF,IAA1C;AACA,MAAMI,KAAY,GAAGF,MAAM,CAACE,KAA5B;;AAEA,MAAIA,KAAJ,EAAW;AACT,wBAAO;AAAA,qCAAsBA,KAAK,CAACC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA,MAAI,CAACC,SAAL,EAAgB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,SAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,gBAAX;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD,CAAc,KAAd;AAAoB,QAAA,OAAO,MAA3B;AAAA,kBACGA,SAAS,CAACK,GAAV,CAAc,UAACC,QAAD;AAAA,8BACb,QAAC,IAAD;AAAwB,YAAA,KAAK,EAAEA,QAAQ,CAACC,IAAxC;AAA8C,YAAA,QAAQ,EAAC,UAAvD;AAAkE,YAAA,UAAU,sBAAeD,QAAQ,CAACE,EAAxB;AAA5E,aAAWF,QAAQ,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,mBADa;AAAA,SAAd;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAkBD;;GA/BQV,S;UACQV,M;;;KADRU,S;AAiCT,qBAAeT,sBAAsB,CAACS,SAAD,CAArC","sourcesContent":["import React from 'react';\nimport { Header, Icon, Item as SemanticItem, Container, Button } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport useSWR from 'swr';\n\nimport { withClientAuthRequired } from '../../authentication/withAuthRequired';\n\nimport Location from './models/Location';\n\nimport Item from './components/Item';\n\ntype LocationsProps = {\n  locations: Array<Location>;\n};\n\nconst fetcher = async (url: string) => {\n  debugger;\n  const res = await fetch(url);\n  debugger;\n  if (!res.ok) {\n    throw Error(\"Yo that's NOT OK!!!\");\n  }\n  const data: Array<Location> = await res.json();\n  return data;\n};\n\nfunction Locations(): JSX.Element {\n  const result = useSWR(`/api/me/locations`, fetcher);\n  const locations: Array<Location> = result.data;\n  const error: Error = result.error;\n\n  if (error) {\n    return <div>Loading failed: {error.message}</div>;\n  }\n  console.log(result);\n  if (!locations) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Header as=\"h1\">\n        <Icon name=\"map outline\" />\n        <Header.Content>Locations</Header.Content>\n      </Header>\n      <Container>\n        <Link href=\"/locations/new\">\n          <Button primary>Add Location</Button>\n        </Link>\n        <SemanticItem.Group divided>\n          {locations.map((location) => (\n            <Item key={location.id} title={location.name} imageSrc=\"/map.svg\" detailsUrl={`locations/${location.id}`} />\n          ))}\n        </SemanticItem.Group>\n      </Container>\n    </>\n  );\n}\n\nexport default withClientAuthRequired(Locations);\n"]},"metadata":{},"sourceType":"module"}