{"ast":null,"code":"import { getAccessToken, withApiAuthRequired } from '@auth0/nextjs-auth0';\nimport BackendClient from '../../../commands/BackendClient';\nexport default withApiAuthRequired(async function locations(req, res) {\n  try {\n    const locationId = req.query.locationId;\n    const mushroomId = req.query.mushroomId;\n    const date = req.query.date;\n    console.log('IDIDDI', locationId, mushroomId, date); // const { name, zone } = JSON.parse(req.body);\n\n    const {\n      accessToken\n    } = await getAccessToken(req, res); //\n    // // To-Do create a API client for locations const client = new BillingApiClient(accessToken);\n    // return axios.get(`http://localhost:3001/locations/${locationId}/mushrooms/${mushroomId}/predictions?date=${date}`);\n\n    const result = await BackendClient.get({\n      path: `/locations/${locationId}/mushrooms/${mushroomId}/predictions?date=${date}`,\n      accessToken\n    });\n    res.status(200).json(result.data);\n    res.end();\n  } catch (error) {\n    console.error(error);\n    res.status(error.status || 500).end(error.message);\n  }\n});","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/api/predictions/index.ts"],"names":["getAccessToken","withApiAuthRequired","BackendClient","locations","req","res","locationId","query","mushroomId","date","console","log","accessToken","result","get","path","status","json","data","end","error","message"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,mBAAzB,QAAoD,qBAApD;AAEA,OAAOC,aAAP,MAA0B,iCAA1B;AAEA,eAAeD,mBAAmB,CAAC,eAAeE,SAAf,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmC;AACpE,MAAI;AACF,UAAMC,UAAU,GAAGF,GAAG,CAACG,KAAJ,CAAUD,UAA7B;AACA,UAAME,UAAU,GAAGJ,GAAG,CAACG,KAAJ,CAAUC,UAA7B;AACA,UAAMC,IAAI,GAAGL,GAAG,CAACG,KAAJ,CAAUE,IAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,UAAtB,EAAkCE,UAAlC,EAA8CC,IAA9C,EAJE,CAKF;;AAEA,UAAM;AAAEG,MAAAA;AAAF,QAAkB,MAAMZ,cAAc,CAACI,GAAD,EAAMC,GAAN,CAA5C,CAPE,CAQF;AACA;AACA;;AAEA,UAAMQ,MAAM,GAAG,MAAMX,aAAa,CAACY,GAAd,CAAkB;AACrCC,MAAAA,IAAI,EAAG,cAAaT,UAAW,cAAaE,UAAW,qBAAoBC,IAAK,EAD3C;AAErCG,MAAAA;AAFqC,KAAlB,CAArB;AAKAP,IAAAA,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBJ,MAAM,CAACK,IAA5B;AACAb,IAAAA,GAAG,CAACc,GAAJ;AACD,GAnBD,CAmBE,OAAOC,KAAP,EAAc;AACdV,IAAAA,OAAO,CAACU,KAAR,CAAcA,KAAd;AACAf,IAAAA,GAAG,CAACW,MAAJ,CAAWI,KAAK,CAACJ,MAAN,IAAgB,GAA3B,EAAgCG,GAAhC,CAAoCC,KAAK,CAACC,OAA1C;AACD;AACF,CAxBiC,CAAlC","sourcesContent":["import { getAccessToken, withApiAuthRequired } from '@auth0/nextjs-auth0';\n\nimport BackendClient from '../../../commands/BackendClient';\n\nexport default withApiAuthRequired(async function locations(req, res) {\n  try {\n    const locationId = req.query.locationId;\n    const mushroomId = req.query.mushroomId;\n    const date = req.query.date;\n    console.log('IDIDDI', locationId, mushroomId, date);\n    // const { name, zone } = JSON.parse(req.body);\n\n    const { accessToken } = await getAccessToken(req, res);\n    //\n    // // To-Do create a API client for locations const client = new BillingApiClient(accessToken);\n    // return axios.get(`http://localhost:3001/locations/${locationId}/mushrooms/${mushroomId}/predictions?date=${date}`);\n\n    const result = await BackendClient.get({\n      path: `/locations/${locationId}/mushrooms/${mushroomId}/predictions?date=${date}`,\n      accessToken,\n    });\n\n    res.status(200).json(result.data);\n    res.end();\n  } catch (error) {\n    console.error(error);\n    res.status(error.status || 500).end(error.message);\n  }\n});\n"]},"metadata":{},"sourceType":"module"}