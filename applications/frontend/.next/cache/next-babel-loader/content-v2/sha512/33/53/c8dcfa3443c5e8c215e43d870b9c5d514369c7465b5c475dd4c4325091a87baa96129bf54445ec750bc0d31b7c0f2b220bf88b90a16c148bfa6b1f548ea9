{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sergiosanchez/Projects/fungus/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sergiosanchez/Projects/fungus/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx\";\nimport React from 'react';\nimport { Header, Icon, Item as SemanticItem, Container, Button } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport getMyLocations from './queries/getMyLocations';\nimport Item from './components/Item';\nexport default function Locations(_ref) {\n  var _this = this;\n\n  var locations = _ref.locations;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"map outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: \"Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/locations/new\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          children: \"Add Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SemanticItem.Group, {\n        divided: true,\n        children: locations.map(function (location) {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            title: location.name,\n            imageSrc: \"/map.svg\",\n            detailsUrl: \"locations/\".concat(location.id)\n          }, location.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Locations;\n\nvar getServerSideProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getMyLocations();\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", {\n              props: {\n                locations: res.data\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getServerSideProps() {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar _c;\n\n$RefreshReg$(_c, \"Locations\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx"],"names":["React","Header","Icon","Item","SemanticItem","Container","Button","Link","getMyLocations","Locations","locations","map","location","name","id","getServerSideProps","res","props","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAI,IAAIC,YAA/B,EAA6CC,SAA7C,EAAwDC,MAAxD,QAAsE,mBAAtE;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAOC,cAAP,MAA2B,0BAA3B;AAEA,OAAOL,IAAP,MAAiB,mBAAjB;AAOA,eAAe,SAASM,SAAT,OAA+D;AAAA;;AAAA,MAA1CC,SAA0C,QAA1CA,SAA0C;AAC5E,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,SAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,gBAAX;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD,CAAc,KAAd;AAAoB,QAAA,OAAO,MAA3B;AAAA,kBACGA,SAAS,CAACC,GAAV,CAAc,UAACC,QAAD;AAAA,8BACb,QAAC,IAAD;AAAwB,YAAA,KAAK,EAAEA,QAAQ,CAACC,IAAxC;AAA8C,YAAA,QAAQ,EAAC,UAAvD;AAAkE,YAAA,UAAU,sBAAeD,QAAQ,CAACE,EAAxB;AAA5E,aAAWF,QAAQ,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,mBADa;AAAA,SAAd;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAkBD;KAnBuBL,S;;AAqBxB,IAAMM,kBAAsC;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC3BP,cAAc,EADa;;AAAA;AACvCQ,YAAAA,GADuC;AAAA,6CAGtC;AAAEC,cAAAA,KAAK,EAAE;AAAEP,gBAAAA,SAAS,EAAEM,GAAG,CAACE;AAAjB;AAAT,aAHsC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtCH,kBAAsC;AAAA;AAAA;AAAA,GAA5C","sourcesContent":["import React from 'react';\nimport { Header, Icon, Item as SemanticItem, Container, Button } from 'semantic-ui-react';\nimport { GetServerSideProps } from 'next';\nimport Link from 'next/link';\n\nimport Location from './models/Location';\nimport getMyLocations from './queries/getMyLocations';\n\nimport Item from './components/Item';\nimport { withPageAuthRequired } from '@auth0/nextjs-auth0';\n\ntype LocationsProps = {\n  locations: Array<Location>;\n};\n\nexport default function Locations({ locations }: LocationsProps): JSX.Element {\n  return (\n    <>\n      <Header as=\"h1\">\n        <Icon name=\"map outline\" />\n        <Header.Content>Locations</Header.Content>\n      </Header>\n      <Container>\n        <Link href=\"/locations/new\">\n          <Button primary>Add Location</Button>\n        </Link>\n        <SemanticItem.Group divided>\n          {locations.map((location) => (\n            <Item key={location.id} title={location.name} imageSrc=\"/map.svg\" detailsUrl={`locations/${location.id}`} />\n          ))}\n        </SemanticItem.Group>\n      </Container>\n    </>\n  );\n}\n\nconst getServerSideProps: GetServerSideProps = async () => {\n  const res = await getMyLocations();\n\n  return { props: { locations: res.data } };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}