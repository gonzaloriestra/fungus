{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/sergiosanchez/Projects/fungus/applications/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sergiosanchez/Projects/fungus/applications/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/harvests/new.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Header, Icon, Form, Button, Select } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport { withClientAuthRequired } from '../../authentication/withAuthRequired';\nimport addHarvest from '../../commands/addHarvests';\nimport useMushrooms from '../../queries/useMushrooms';\n\nfunction NewHarvest() {\n  _s();\n\n  var _useMushrooms = useMushrooms(),\n      mushrooms = _useMushrooms.mushrooms,\n      isLoading = _useMushrooms.isLoading,\n      error = _useMushrooms.error;\n\n  var _useState = useState(''),\n      date = _useState[0],\n      setDate = _useState[1];\n\n  var _useState2 = useState(''),\n      mushroomId = _useState2[0],\n      setMushroomId = _useState2[1];\n\n  var _useState3 = useState(''),\n      quantity = _useState3[0],\n      setQuantity = _useState3[1];\n\n  var router = useRouter();\n\n  var handleOnSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var locationId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              locationId = router.query.locationId;\n              _context.next = 3;\n              return addHarvest({\n                date: date,\n                locationId: locationId,\n                mushroomId: mushroomId,\n                quantity: quantity\n              });\n\n            case 3:\n              router.push(\"/locations/\".concat(locationId));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleOnSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function transformMushroomsInOptions() {\n    return mushrooms.map(function (mushroom) {\n      return {\n        key: mushroom.id,\n        value: mushroom.id,\n        text: mushroom.scientificName\n      };\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading failed: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"map outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: \"New Harvest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      style: {\n        padding: '0 100px'\n      },\n      onSubmit: handleOnSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          placeholder: \"Date\",\n          onChange: function onChange(e) {\n            return setDate(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mushroom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Mushroom\",\n          options: transformMushroomsInOptions() // @ts-ignore\n          ,\n          onChange: function onChange(_, data) {\n            return setMushroomId(data.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"quantity\",\n          onChange: function onChange(e) {\n            return setQuantity(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        primary: true,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewHarvest, \"xDqfgKbJ2PsPYy+c5JadGRD0ncw=\", false, function () {\n  return [useMushrooms, useRouter];\n});\n\n_c = NewHarvest;\nexport default _c2 = withClientAuthRequired(NewHarvest);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewHarvest\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/harvests/new.tsx"],"names":["React","useState","Header","Icon","Form","Button","Select","useRouter","withClientAuthRequired","addHarvest","useMushrooms","NewHarvest","mushrooms","isLoading","error","date","setDate","mushroomId","setMushroomId","quantity","setQuantity","router","handleOnSubmit","locationId","query","push","transformMushroomsInOptions","map","mushroom","key","id","value","text","scientificName","message","padding","e","target","_","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Header, Icon, Form, Button, Select } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\n\nimport { withClientAuthRequired } from '../../authentication/withAuthRequired';\n\nimport addHarvest from '../../commands/addHarvests';\nimport useMushrooms from '../../queries/useMushrooms';\n\nfunction NewHarvest(): JSX.Element {\n  const { mushrooms, isLoading, error } = useMushrooms();\n  const [date, setDate] = useState('');\n  const [mushroomId, setMushroomId] = useState('');\n  const [quantity, setQuantity] = useState('');\n\n  const router = useRouter();\n\n  const handleOnSubmit = async () => {\n    const locationId = router.query.locationId;\n\n    await addHarvest({ date, locationId, mushroomId, quantity });\n\n    router.push(`/locations/${locationId}`);\n  };\n\n  function transformMushroomsInOptions() {\n    return mushrooms.map((mushroom) => ({ key: mushroom.id, value: mushroom.id, text: mushroom.scientificName }));\n  }\n\n  if (error) {\n    return <div>Loading failed: {error.message}</div>;\n  }\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <Header as=\"h1\">\n        <Icon name=\"map outline\" />\n        <Header.Content>New Harvest</Header.Content>\n      </Header>\n\n      <Form\n        style={{\n          padding: '0 100px',\n        }}\n        onSubmit={handleOnSubmit}\n      >\n        <Form.Field>\n          <label>Date</label>\n          <input type=\"date\" placeholder=\"Date\" onChange={(e): void => setDate(e.target.value)} />\n        </Form.Field>\n        <Form.Field>\n          <label>Mushroom</label>\n          <Select\n            placeholder=\"Mushroom\"\n            options={transformMushroomsInOptions()}\n            // @ts-ignore\n            onChange={(_, data: { value: string }): void => setMushroomId(data.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Quantity</label>\n          <input placeholder=\"quantity\" onChange={(e): void => setQuantity(e.target.value)} />\n        </Form.Field>\n        <Button type=\"submit\" primary>\n          Save\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nexport default withClientAuthRequired(NewHarvest);\n"]},"metadata":{},"sourceType":"module"}