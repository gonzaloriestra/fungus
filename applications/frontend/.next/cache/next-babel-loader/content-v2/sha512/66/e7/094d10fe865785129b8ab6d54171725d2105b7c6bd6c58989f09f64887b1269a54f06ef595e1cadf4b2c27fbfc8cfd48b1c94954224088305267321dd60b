{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/sergiosanchez/Projects/fungus/applications/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sergiosanchez/Projects/fungus/applications/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useState } from 'react';\nimport { Header, Icon, Form, Button, Select } from 'semantic-ui-react';\nimport { useRouter } from 'next/router';\nimport addHarvest from '../../queries/addHarvest';\nexport var __N_SSP = true;\nexport default function NewHarvest(_ref) {\n  var mushrooms = _ref.mushrooms;\n\n  var _useState = useState(''),\n      date = _useState[0],\n      setDate = _useState[1];\n\n  var _useState2 = useState(''),\n      mushroomId = _useState2[0],\n      setMushroomId = _useState2[1];\n\n  var _useState3 = useState(''),\n      quantity = _useState3[0],\n      setQuantity = _useState3[1];\n\n  var router = useRouter();\n\n  var handleOnSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var locationId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              locationId = router.query.locationId;\n              _context.next = 3;\n              return addHarvest({\n                date: date,\n                locationId: locationId,\n                mushroomId: mushroomId,\n                quantity: quantity\n              });\n\n            case 3:\n              router.push(\"/locations/\".concat(locationId));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleOnSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function transformMushroomsInOptions() {\n    return mushrooms.map(function (mushroom) {\n      return {\n        key: mushroom.id,\n        value: mushroom.id,\n        text: mushroom.scientificName\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Header, {\n      as: \"h1\",\n      children: [/*#__PURE__*/_jsx(Icon, {\n        name: \"map outline\"\n      }), /*#__PURE__*/_jsx(Header.Content, {\n        children: \"New Harvest\"\n      })]\n    }), /*#__PURE__*/_jsxs(Form, {\n      style: {\n        padding: '0 100px'\n      },\n      onSubmit: handleOnSubmit,\n      children: [/*#__PURE__*/_jsxs(Form.Field, {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Date\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"date\",\n          placeholder: \"Date\",\n          onChange: function onChange(e) {\n            return setDate(e.target.value);\n          }\n        })]\n      }), /*#__PURE__*/_jsxs(Form.Field, {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Mushroom\"\n        }), /*#__PURE__*/_jsx(Select, {\n          placeholder: \"Mushroom\",\n          options: transformMushroomsInOptions() // @ts-ignore\n          ,\n          onChange: function onChange(_, data) {\n            return setMushroomId(data.value);\n          }\n        })]\n      }), /*#__PURE__*/_jsxs(Form.Field, {\n        children: [/*#__PURE__*/_jsx(\"label\", {\n          children: \"Quantity\"\n        }), /*#__PURE__*/_jsx(\"input\", {\n          placeholder: \"quantity\",\n          onChange: function onChange(e) {\n            return setQuantity(e.target.value);\n          }\n        })]\n      }), /*#__PURE__*/_jsx(Button, {\n        type: \"submit\",\n        primary: true,\n        children: \"Save\"\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}