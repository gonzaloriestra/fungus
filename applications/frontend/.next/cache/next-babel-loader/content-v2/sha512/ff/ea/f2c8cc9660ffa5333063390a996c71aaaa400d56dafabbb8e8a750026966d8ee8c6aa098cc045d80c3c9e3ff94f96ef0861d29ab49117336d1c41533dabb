{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/sergiosanchez/Projects/fungus/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sergiosanchez/Projects/fungus/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/predictions/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Container, Form, Select, Header as SemanticHeader, Dimmer, Icon } from 'semantic-ui-react';\nimport useSWR from 'swr';\nimport fetcher from '../../fetching/fetcher';\nimport makePrediction from './queries/makePrediction';\nimport Header, { ActivePage } from '../../components/Header';\nimport { useRouter } from 'next/router';\nvar square = {\n  width: 175,\n  height: 175\n};\nexport var __N_SSP = true;\nexport default function Predictions(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var mushrooms = _ref.mushrooms;\n  var router = useRouter();\n\n  var _useState = useState(),\n      date = _useState[0],\n      setDate = _useState[1];\n\n  var _useState2 = useState(router.query.locationId),\n      locationId = _useState2[0],\n      setLocationId = _useState2[1];\n\n  var _useState3 = useState(),\n      mushroomId = _useState3[0],\n      setMushroomId = _useState3[1];\n\n  var _useState4 = useState(),\n      prediction = _useState4[0],\n      setPrediction = _useState4[1];\n\n  var _useState5 = useState(),\n      active = _useState5[0],\n      setActive = _useState5[1];\n\n  var handleOnSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _response$data;\n\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return makePrediction({\n                date: date,\n                locationId: locationId,\n                mushroomId: mushroomId\n              });\n\n            case 2:\n              response = _context.sent;\n              setPrediction(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.probability);\n              setActive(true);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleOnSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleClose = function handleClose() {\n    return setActive(false);\n  };\n\n  var handleOnChangeLocation = function handleOnChangeLocation(_, data) {\n    setLocationId(data.value);\n    router.push(\"predictions/?locationId=\".concat(data.value), undefined, {\n      shallow: true\n    });\n  };\n\n  function transformLocationsInOptions() {\n    _s();\n\n    var result = useSWR(\"/api/me/locations\", fetcher);\n    var locations = result.data; // const error: Error = result.error;\n    // if (error) {\n    //   return <div>Loading failed: {error.message}</div>;\n    // }\n    // if (!locations) {\n    //   return <div>Loading...</div>;\n    // }\n\n    return locations === null || locations === void 0 ? void 0 : locations.map(function (location) {\n      return {\n        key: location.id,\n        value: location.id,\n        text: location.name\n      };\n    });\n  }\n\n  _s(transformLocationsInOptions, \"NOnZQl9n1uJkdTCHetkSuu6Wp+Y=\", false, function () {\n    return [useSWR];\n  });\n\n  function transformMushroomsInOptions() {\n    return mushrooms.map(function (mushroom) {\n      return {\n        key: mushroom.id,\n        value: mushroom.id,\n        text: mushroom.scientificName\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      activePage: ActivePage.predictions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\xBFCu\\xE1ndo?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            onChange: function onChange(e) {\n              return setDate(e.target.value);\n            },\n            placeholder: \"Introduce fecha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\xBFQu\\xE9 seta?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Seleciona especie\",\n            options: transformMushroomsInOptions(),\n            onChange: function onChange(_, data) {\n              return setMushroomId(data.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\xBFPara qu\\xE9 localizaci\\xF3n?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Seleciona localizaci\\xF3n\",\n            options: transformLocationsInOptions(),\n            onChange: handleOnChangeLocation,\n            value: locationId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          circular: true,\n          type: \"submit\",\n          primary: true,\n          style: square,\n          children: /*#__PURE__*/_jsxDEV(SemanticHeader, {\n            as: \"h2\",\n            inverted: true,\n            children: prediction >= 0 ? prediction : 'Mostrar predicci√≥n'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: prediction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dimmer, {\n        active: active,\n        onClickOutside: handleClose,\n        page: true,\n        children: /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          icon: true,\n          inverted: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"heart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), prediction, /*#__PURE__*/_jsxDEV(Header.Subheader, {\n            children: \"Dimmer sub-header\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Predictions, \"YOVAUuRg7dyiSgcptiAjPizijxQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = Predictions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Predictions\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/predictions/index.tsx"],"names":["React","useState","Button","Container","Form","Select","Header","SemanticHeader","Dimmer","Icon","useSWR","fetcher","makePrediction","ActivePage","useRouter","square","width","height","Predictions","mushrooms","router","date","setDate","query","locationId","setLocationId","mushroomId","setMushroomId","prediction","setPrediction","active","setActive","handleOnSubmit","response","data","probability","handleClose","handleOnChangeLocation","_","value","push","undefined","shallow","transformLocationsInOptions","result","locations","map","location","key","id","text","name","transformMushroomsInOptions","mushroom","scientificName","predictions","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Container, Form, Label, Select, Header as SemanticHeader, Dimmer, Icon } from 'semantic-ui-react';\nimport { GetServerSideProps } from 'next';\nimport useSWR from 'swr';\n\nimport { withServerAuthRequired } from '../../authentication/withAuthRequired';\nimport fetcher from '../../fetching/fetcher';\n\nimport getMushrooms from '../harvests/queries/getMushrooms';\nimport makePrediction from './queries/makePrediction';\nimport Location from '../locations/models/Location';\nimport Header, { ActivePage } from '../../components/Header';\nimport { useRouter } from 'next/router';\n\ntype PredictionsProps = {\n  mushrooms: Array<{ id: string; scientificName: string }>;\n  locations: Array<{ id: string; name: string }>;\n};\n\nconst square = { width: 175, height: 175 };\n\nexport default function Predictions({ mushrooms }: PredictionsProps): JSX.Element {\n  const router = useRouter();\n\n  const [date, setDate] = useState();\n  const [locationId, setLocationId] = useState(router.query.locationId);\n  const [mushroomId, setMushroomId] = useState();\n  const [prediction, setPrediction] = useState();\n  const [active, setActive] = useState();\n\n  const handleOnSubmit = async () => {\n    const response = await makePrediction({ date, locationId, mushroomId });\n\n    setPrediction(response?.data?.probability);\n\n    setActive(true);\n  };\n\n  const handleClose = () => setActive(false);\n\n  const handleOnChangeLocation = (_, data) => {\n    setLocationId(data.value);\n\n    router.push(`predictions/?locationId=${data.value}`, undefined, { shallow: true });\n  };\n\n  function transformLocationsInOptions() {\n    const result = useSWR(`/api/me/locations`, fetcher);\n    const locations: Array<Location> = result.data;\n    // const error: Error = result.error;\n\n    // if (error) {\n    //   return <div>Loading failed: {error.message}</div>;\n    // }\n\n    // if (!locations) {\n    //   return <div>Loading...</div>;\n    // }\n\n    return locations?.map((location) => ({ key: location.id, value: location.id, text: location.name }));\n  }\n\n  function transformMushroomsInOptions() {\n    return mushrooms.map((mushroom) => ({ key: mushroom.id, value: mushroom.id, text: mushroom.scientificName }));\n  }\n\n  return (\n    <>\n      <Header activePage={ActivePage.predictions} />\n      <Container>\n        <Form onSubmit={handleOnSubmit}>\n          <Form.Field>\n            <label>¬øCu√°ndo?</label>\n            <input type=\"date\" onChange={(e): void => setDate(e.target.value)} placeholder=\"Introduce fecha\" />\n          </Form.Field>\n          <Form.Field>\n            <label>¬øQu√© seta?</label>\n            <Select\n              placeholder=\"Seleciona especie\"\n              options={transformMushroomsInOptions()}\n              onChange={(_, data): void => setMushroomId(data.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>¬øPara qu√© localizaci√≥n?</label>\n            <Select\n              placeholder=\"Seleciona localizaci√≥n\"\n              options={transformLocationsInOptions()}\n              onChange={handleOnChangeLocation}\n              value={locationId}\n            />\n          </Form.Field>\n          <Button circular type=\"submit\" primary style={square}>\n            <SemanticHeader as=\"h2\" inverted>\n              {prediction >= 0 ? prediction : 'Mostrar predicci√≥n'}\n            </SemanticHeader>\n          </Button>\n          <label>{prediction}</label>\n        </Form>\n        <Dimmer active={active} onClickOutside={handleClose} page>\n          <Header as=\"h2\" icon inverted>\n            <Icon name=\"heart\" />\n            {prediction}\n            <Header.Subheader>Dimmer sub-header</Header.Subheader>\n          </Header>\n        </Dimmer>\n      </Container>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = withServerAuthRequired(async () => {\n  const resMushrooms = await getMushrooms();\n\n  return { props: { mushrooms: resMushrooms.data } };\n});\n"]},"metadata":{},"sourceType":"module"}