{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Header, Icon, Item as SemanticItem, Container, Button } from 'semantic-ui-react';\nimport Link from 'next/link';\nimport useSWR from 'swr';\nimport Item from './components/Item';\nexport var __N_SSP = true;\nexport default function Locations(_ref) {\n  _s();\n\n  var _this = this;\n\n  var locations = _ref.locations;\n  var result = useSWR(\"/api/user/\".concat(id), fetcher);\n  var data = result.data;\n  var error = result.error;\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"error\",\n      children: [\"Loading failed: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      status: \"info\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"map outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: \"Locations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        href: \"/locations/new\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          children: \"Add Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SemanticItem.Group, {\n        divided: true,\n        children: locations.map(function (location) {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            title: location.name,\n            imageSrc: \"/map.svg\",\n            detailsUrl: \"locations/\".concat(location.id)\n          }, location.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Locations, \"NOnZQl9n1uJkdTCHetkSuu6Wp+Y=\", false, function () {\n  return [useSWR];\n});\n\n_c = Locations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Locations\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/index.tsx"],"names":["React","Header","Icon","Item","SemanticItem","Container","Button","Link","useSWR","Locations","locations","result","id","fetcher","data","error","message","map","location","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,IAAI,IAAIC,YAA/B,EAA6CC,SAA7C,EAAwDC,MAAxD,QAAsE,mBAAtE;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAOA,OAAOL,IAAP,MAAiB,mBAAjB;;AAMA,eAAe,SAASM,SAAT,OAA+D;AAAA;;AAAA;;AAAA,MAA1CC,SAA0C,QAA1CA,SAA0C;AAC5E,MAAMC,MAAM,GAAGH,MAAM,qBAAcI,EAAd,GAAoBC,OAApB,CAArB;AACA,MAAMC,IAAU,GAAGH,MAAM,CAACG,IAA1B;AACA,MAAMC,KAAY,GAAGJ,MAAM,CAACI,KAA5B;;AAEA,MAAIA,KAAJ,EAAW;AACT,wBAAO,QAAC,KAAD;AAAO,MAAA,MAAM,EAAC,OAAd;AAAA,qCAAuCA,KAAK,CAACC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACF,IAAL,EAAW;AACT,wBAAO,QAAC,KAAD;AAAO,MAAA,MAAM,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,IAAX;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,SAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,gBAAX;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,YAAD,CAAc,KAAd;AAAoB,QAAA,OAAO,MAA3B;AAAA,kBACGJ,SAAS,CAACO,GAAV,CAAc,UAACC,QAAD;AAAA,8BACb,QAAC,IAAD;AAAwB,YAAA,KAAK,EAAEA,QAAQ,CAACC,IAAxC;AAA8C,YAAA,QAAQ,EAAC,UAAvD;AAAkE,YAAA,UAAU,sBAAeD,QAAQ,CAACN,EAAxB;AAA5E,aAAWM,QAAQ,CAACN,EAApB;AAAA;AAAA;AAAA;AAAA,mBADa;AAAA,SAAd;AADH;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAkBD;;GA/BuBH,S;UACPD,M;;;KADOC,S","sourcesContent":["import React from 'react';\nimport { Header, Icon, Item as SemanticItem, Container, Button } from 'semantic-ui-react';\nimport { GetServerSideProps } from 'next';\nimport Link from 'next/link';\nimport useSWR from 'swr';\n\nimport { withServerAuthRequired } from '../../authentication/withAuthRequired';\n\nimport Location from './models/Location';\nimport getMyLocations from './queries/getMyLocations';\n\nimport Item from './components/Item';\n\ntype LocationsProps = {\n  locations: Array<Location>;\n};\n\nexport default function Locations({ locations }: LocationsProps): JSX.Element {\n  const result = useSWR(`/api/user/${id}`, fetcher);\n  const data: Data = result.data;\n  const error: Error = result.error;\n\n  if (error) {\n    return <Alert status=\"error\">Loading failed: {error.message}</Alert>;\n  }\n\n  if (!data) {\n    return <Alert status=\"info\">Loading...</Alert>;\n  }\n  \n  return (\n    <>\n      <Header as=\"h1\">\n        <Icon name=\"map outline\" />\n        <Header.Content>Locations</Header.Content>\n      </Header>\n      <Container>\n        <Link href=\"/locations/new\">\n          <Button primary>Add Location</Button>\n        </Link>\n        <SemanticItem.Group divided>\n          {locations.map((location) => (\n            <Item key={location.id} title={location.name} imageSrc=\"/map.svg\" detailsUrl={`locations/${location.id}`} />\n          ))}\n        </SemanticItem.Group>\n      </Container>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = withServerAuthRequired(async () => {\n  const res = await getMyLocations();\n\n  return { props: { locations: res.data } };\n});\n"]},"metadata":{},"sourceType":"module"}