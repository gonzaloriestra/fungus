{"ast":null,"code":"var _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Item as SemanticItem } from 'semantic-ui-react';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport { Circle, CircleMarker, Map, Polygon, Popup, TileLayer } from 'react-leaflet';\nimport Item from './components/Item';\nvar center = [51.505, -0.09];\nvar polygon = [[51.515, -0.09], [51.52, -0.1], [51.52, -0.12]];\nvar multiPolygon = [[[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]], [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]]];\nexport var __N_SSP = true;\nexport default function LocationDetails(_ref) {\n  _s();\n\n  var location = _ref.location;\n\n  var _useState = useState(false),\n      isBrowser = _useState[0],\n      setIsBrowser = _useState[1];\n\n  useEffect(function () {\n    // const mymap = L.map('mapid').setView([51.509, -0.08], 13);\n    // L.tileLayer(\n    //   'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic3NhbmNoZXptYXJjIiwiYSI6ImNrZjVybWpocjBxNDYyeW5vZjA1M3ZoN3MifQ.XR8RGT-Ns7aky5hUbwzfCw',\n    //   {\n    //     attribution:\n    //       'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    //     maxZoom: 18,\n    //     id: 'mapbox/streets-v11',\n    //     tileSize: 512,\n    //     zoomOffset: -1,\n    //     accessToken: 'your.mapbox.access.token',\n    //   },\n    // ).addTo(mymap);\n    //\n    // const polygon = L.polygon([\n    //   [51.509, -0.08],\n    //   [51.503, -0.06],\n    //   [51.51, -0.047],\n    // ]).addTo(mymap);\n    setIsBrowser(true);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, isBrowser && __jsx(Map, {\n    center: center,\n    zoom: 13,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), __jsx(Circle, {\n    center: center,\n    fillColor: \"blue\",\n    radius: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), __jsx(CircleMarker, {\n    center: [51.51, -0.12],\n    color: \"red\",\n    radius: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, __jsx(Popup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Popup in CircleMarker\")), __jsx(Polygon, {\n    color: \"purple\",\n    positions: polygon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), __jsx(Polygon, {\n    color: \"purple\",\n    positions: multiPolygon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), __jsx(SemanticContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(SemanticItem.Group, {\n    divided: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(Item, {\n    key: location.id,\n    title: location.name,\n    imageSrc: \"/map.svg\",\n    detailsUrl: \"location/\".concat(location.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }\n  }), location.coordinates)));\n}\n\n_s(LocationDetails, \"pnrCiumIYbqf1FD6ZsJEw+RYujA=\");\n\n_c = LocationDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationDetails\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx"],"names":["React","useEffect","useState","Item","SemanticItem","Container","SemanticContainer","Circle","CircleMarker","Map","Polygon","Popup","TileLayer","center","polygon","multiPolygon","LocationDetails","location","isBrowser","setIsBrowser","id","name","coordinates"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Item as SemanticItem } from 'semantic-ui-react';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport { GetServerSideProps } from 'next';\nimport Head from 'next/head';\nimport { Circle, CircleMarker, Map, Polygon, Popup, TileLayer } from 'react-leaflet';\n\nimport Location from './models/Location';\nimport getLocation from './queries/getLocation';\n\nimport Item from './components/Item';\n\ntype LocationProps = {\n  location: Location;\n};\n\nconst center = [51.505, -0.09];\n\nconst polygon = [\n  [51.515, -0.09],\n  [51.52, -0.1],\n  [51.52, -0.12],\n];\n\nconst multiPolygon = [\n  [\n    [51.51, -0.12],\n    [51.51, -0.13],\n    [51.53, -0.13],\n  ],\n  [\n    [51.51, -0.05],\n    [51.51, -0.07],\n    [51.53, -0.07],\n  ],\n];\n\nexport default function LocationDetails({ location }: LocationProps): JSX.Element {\n  const [isBrowser, setIsBrowser] = useState(false);\n  useEffect(() => {\n    // const mymap = L.map('mapid').setView([51.509, -0.08], 13);\n    // L.tileLayer(\n    //   'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic3NhbmNoZXptYXJjIiwiYSI6ImNrZjVybWpocjBxNDYyeW5vZjA1M3ZoN3MifQ.XR8RGT-Ns7aky5hUbwzfCw',\n    //   {\n    //     attribution:\n    //       'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    //     maxZoom: 18,\n    //     id: 'mapbox/streets-v11',\n    //     tileSize: 512,\n    //     zoomOffset: -1,\n    //     accessToken: 'your.mapbox.access.token',\n    //   },\n    // ).addTo(mymap);\n    //\n    // const polygon = L.polygon([\n    //   [51.509, -0.08],\n    //   [51.503, -0.06],\n    //   [51.51, -0.047],\n    // ]).addTo(mymap);\n    setIsBrowser(true);\n  }, []);\n\n  return (\n    <div>\n      {isBrowser && (\n        <Map center={center} zoom={13}>\n          <TileLayer\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Circle center={center} fillColor=\"blue\" radius={200} />\n          <CircleMarker center={[51.51, -0.12]} color=\"red\" radius={20}>\n            <Popup>Popup in CircleMarker</Popup>\n          </CircleMarker>\n          <Polygon color=\"purple\" positions={polygon} />\n          <Polygon color=\"purple\" positions={multiPolygon} />\n        </Map>\n      )}\n\n      \n      <SemanticContainer>\n        <SemanticItem.Group divided>\n          {<Item key={location.id} title={location.name} imageSrc=\"/map.svg\" detailsUrl={`location/${location.id}`} />}\n          {location.coordinates}\n        </SemanticItem.Group>\n      </SemanticContainer>\n    </div>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const res = await getLocation({ id: params.id });\n\n  return { props: { location: res.data } };\n};\n"]},"metadata":{},"sourceType":"module"}