{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/components/Map/Map.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Map as MapLeaflet, TileLayer, Polygon, FeatureGroup } from 'react-leaflet';\nimport { EditControl } from 'react-leaflet-draw';\nimport styles from './map.module.css';\n\nfunction mapPositionFromArea(area) {\n  if (area && area.length) {\n    return {\n      lat: area[0].latitude,\n      lng: area[0].longitude\n    };\n  }\n}\n\nfunction handleOnCreate(event) {\n  console.log(\"SE EJECUTA\");\n  console.log(event);\n}\n\nvar Map = function Map(_ref) {\n  _s();\n\n  var location = _ref.location,\n      _ref$initialZoom = _ref.initialZoom,\n      initialZoom = _ref$initialZoom === void 0 ? 15 : _ref$initialZoom;\n  var area = location === null || location === void 0 ? void 0 : location.area;\n\n  var _useState = useState(mapPositionFromArea(area)),\n      position = _useState[0];\n\n  var _useState2 = useState(initialZoom),\n      zoom = _useState2[0];\n\n  return __jsx(MapLeaflet, {\n    className: styles.container,\n    center: position,\n    zoom: zoom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(TileLayer, {\n    url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(FeatureGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(EditControl, {\n    position: \"topright\",\n    draw: {\n      rectangle: false,\n      circle: false,\n      marker: false,\n      circlemarker: false,\n      polyline: false\n    },\n    onCreated: handleOnCreate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), __jsx(Polygon, {\n    positions: area.map(function (coordinate) {\n      return [coordinate.latitude, coordinate.longitude];\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Map, \"+nRxxDPJEsAAnsra6NKnCcJS8YI=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/components/Map/Map.tsx"],"names":["React","useState","Map","MapLeaflet","TileLayer","Polygon","FeatureGroup","EditControl","styles","mapPositionFromArea","area","length","lat","latitude","lng","longitude","handleOnCreate","event","console","log","location","initialZoom","position","zoom","container","rectangle","circle","marker","circlemarker","polyline","map","coordinate"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAG,IAAIC,UAAhB,EAA4BC,SAA5B,EAAuCC,OAAvC,EAAgDC,YAAhD,QAAoE,eAApE;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AAIA,OAAOC,MAAP,MAAmB,kBAAnB;;AAOA,SAASC,mBAAT,CAA6BC,IAA7B,EAAqD;AACnD,MAAIA,IAAI,IAAIA,IAAI,CAACC,MAAjB,EAAyB;AACvB,WAAO;AAAEC,MAAAA,GAAG,EAAEF,IAAI,CAAC,CAAD,CAAJ,CAAQG,QAAf;AAAyBC,MAAAA,GAAG,EAAEJ,IAAI,CAAC,CAAD,CAAJ,CAAQK;AAAtC,KAAP;AACD;AACF;;AAED,SAASC,cAAT,CAAwBC,KAAxB,EAAqC;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAED,IAAMf,GAAG,GAAG,SAANA,GAAM,OAA2D;AAAA;;AAAA,MAAxDkB,QAAwD,QAAxDA,QAAwD;AAAA,8BAA9CC,WAA8C;AAAA,MAA9CA,WAA8C,iCAAhC,EAAgC;AACrE,MAAMX,IAAI,GAAGU,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEV,IAAvB;;AADqE,kBAGlDT,QAAQ,CAACQ,mBAAmB,CAACC,IAAD,CAApB,CAH0C;AAAA,MAG9DY,QAH8D;;AAAA,mBAItDrB,QAAQ,CAACoB,WAAD,CAJ8C;AAAA,MAI9DE,IAJ8D;;AAMrE,SACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEf,MAAM,CAACgB,SAA9B;AAAyC,IAAA,MAAM,EAAEF,QAAjD;AAA2D,IAAA,IAAI,EAAEC,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,GAAG,EAAC,+FAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,QAAQ,EAAC,UADX;AAEE,IAAA,IAAI,EAAE;AACJE,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,MAAM,EAAE,KAFJ;AAGJC,MAAAA,MAAM,EAAE,KAHJ;AAIJC,MAAAA,YAAY,EAAE,KAJV;AAKJC,MAAAA,QAAQ,EAAE;AALN,KAFR;AASE,IAAA,SAAS,EAAEb,cATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAeE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEN,IAAI,CAACoB,GAAL,CAAS,UAACC,UAAD;AAAA,aAAgB,CAACA,UAAU,CAAClB,QAAZ,EAAsBkB,UAAU,CAAChB,SAAjC,CAAhB;AAAA,KAAT,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAmBD,CAzBD;;GAAMb,G;;KAAAA,G;AA2BN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Map as MapLeaflet, TileLayer, Polygon, FeatureGroup } from 'react-leaflet';\nimport { LatLngExpression } from 'leaflet';\nimport { EditControl } from 'react-leaflet-draw';\n\nimport Location from '../../models/Location';\n\nimport styles from './map.module.css';\n\ntype MapProps = {\n  location: Location;\n  initialZoom?: number;\n};\n\nfunction mapPositionFromArea(area): LatLngExpression {\n  if (area && area.length) {\n    return { lat: area[0].latitude, lng: area[0].longitude };\n  }\n}\n\nfunction handleOnCreate(event): void {\n  console.log(\"SE EJECUTA\");\n  console.log(event);\n}\n\nconst Map = ({ location, initialZoom = 15 }: MapProps): JSX.Element => {\n  const area = location?.area;\n\n  const [position] = useState(mapPositionFromArea(area));\n  const [zoom] = useState(initialZoom);\n\n  return (\n    <MapLeaflet className={styles.container} center={position} zoom={zoom}>\n      <TileLayer url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\" />\n      <FeatureGroup>\n        <EditControl\n          position=\"topright\"\n          draw={{\n            rectangle: false,\n            circle: false,\n            marker: false,\n            circlemarker: false,\n            polyline: false,\n          }}\n          onCreated={handleOnCreate}\n        />\n      </FeatureGroup>\n      <Polygon positions={area.map((coordinate) => [coordinate.latitude, coordinate.longitude])} />\n    </MapLeaflet>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}