{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/components/Map/Map.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Map as MapLeaflet, TileLayer, Polygon } from 'react-leaflet';\nimport styles from './map.module.css';\n\nvar Map = function Map(_ref) {\n  _s();\n\n  var location = _ref.location,\n      _ref$initialZoom = _ref.initialZoom,\n      initialZoom = _ref$initialZoom === void 0 ? 15 : _ref$initialZoom;\n  var coordinates = location === null || location === void 0 ? void 0 : location.coordinates;\n\n  var _useState = useState(mapPositionFromCoordinates(coordinates)),\n      position = _useState[0];\n\n  var _useState2 = useState(initialZoom),\n      zoom = _useState2[0];\n\n  return __jsx(MapLeaflet, {\n    className: styles.container,\n    center: position,\n    zoom: zoom,\n    style: {\n      height: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(Polygon, {\n    positions: coordinates.map(function (coordinate) {\n      return [coordinate.latitude, coordinate.longitude];\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Map, \"9pOwZK8Mq8PA64iWRIiO1sFUDN0=\");\n\n_c = Map;\nexport default Map;\n\nfunction mapPositionFromCoordinates(coordinates) {\n  if (coordinates && coordinates.length) {\n    return {\n      lat: coordinates[0].latitude,\n      lng: coordinates[0].longitude\n    };\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/components/Map/Map.tsx"],"names":["React","useState","Map","MapLeaflet","TileLayer","Polygon","styles","location","initialZoom","coordinates","mapPositionFromCoordinates","position","zoom","container","height","map","coordinate","latitude","longitude","length","lat","lng"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAG,IAAIC,UAAhB,EAA4BC,SAA5B,EAAuCC,OAAvC,QAAsD,eAAtD;AAKA,OAAOC,MAAP,MAAmB,kBAAnB;;AAOA,IAAMJ,GAAG,GAAG,SAANA,GAAM,OAA2D;AAAA;;AAAA,MAAxDK,QAAwD,QAAxDA,QAAwD;AAAA,8BAA9CC,WAA8C;AAAA,MAA9CA,WAA8C,iCAAhC,EAAgC;AACrE,MAAMC,WAAW,GAAGF,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEE,WAA9B;;AADqE,kBAGlDR,QAAQ,CAACS,0BAA0B,CAACD,WAAD,CAA3B,CAH0C;AAAA,MAG9DE,QAH8D;;AAAA,mBAItDV,QAAQ,CAACO,WAAD,CAJ8C;AAAA,MAI9DI,IAJ8D;;AAMrE,SACE,MAAC,UAAD;AACE,IAAA,SAAS,EAAEN,MAAM,CAACO,SADpB;AAEE,IAAA,MAAM,EAAEF,QAFV;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,KAAK,EAAE;AACLE,MAAAA,MAAM,EAAE;AADH,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,SAAD;AAAW,IAAA,GAAG,EAAC,oDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE,MAAC,OAAD;AAAS,IAAA,SAAS,EAAEL,WAAW,CAACM,GAAZ,CAAgB,UAACC,UAAD;AAAA,aAAgB,CAACA,UAAU,CAACC,QAAZ,EAAsBD,UAAU,CAACE,SAAjC,CAAhB;AAAA,KAAhB,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CAnBD;;GAAMhB,G;;KAAAA,G;AAqBN,eAAeA,GAAf;;AAEA,SAASQ,0BAAT,CAAoCD,WAApC,EAAmE;AACjE,MAAIA,WAAW,IAAIA,WAAW,CAACU,MAA/B,EAAuC;AACrC,WAAO;AAAEC,MAAAA,GAAG,EAAEX,WAAW,CAAC,CAAD,CAAX,CAAeQ,QAAtB;AAAgCI,MAAAA,GAAG,EAAEZ,WAAW,CAAC,CAAD,CAAX,CAAeS;AAApD,KAAP;AACD;AACF","sourcesContent":["import React, { useState } from 'react';\nimport { Map as MapLeaflet, TileLayer, Polygon } from 'react-leaflet';\nimport { LatLngExpression } from 'leaflet';\n\nimport Location from '../../models/Location';\n\nimport styles from './map.module.css';\n\ntype MapProps = {\n  location: Location;\n  initialZoom?: number;\n};\n\nconst Map = ({ location, initialZoom = 15 }: MapProps): JSX.Element => {\n  const coordinates = location?.coordinates;\n\n  const [position] = useState(mapPositionFromCoordinates(coordinates));\n  const [zoom] = useState(initialZoom);\n\n  return (\n    <MapLeaflet\n      className={styles.container}\n      center={position}\n      zoom={zoom}\n      style={{\n        height: '100%',\n      }}\n    >\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\n      <Polygon positions={coordinates.map((coordinate) => [coordinate.latitude, coordinate.longitude])} />\n    </MapLeaflet>\n  );\n};\n\nexport default Map;\n\nfunction mapPositionFromCoordinates(coordinates): LatLngExpression {\n  if (coordinates && coordinates.length) {\n    return { lat: coordinates[0].latitude, lng: coordinates[0].longitude };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}