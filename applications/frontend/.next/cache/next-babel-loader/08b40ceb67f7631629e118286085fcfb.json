{"ast":null,"code":"var _jsxFileName = \"/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { Item as SemanticItem } from 'semantic-ui-react';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport getLocation from './queries/getLocation';\nimport Item from './components/Item';\nconst center = [51.505, -0.09];\nconst polygon = [[51.515, -0.09], [51.52, -0.1], [51.52, -0.12]];\nconst multiPolygon = [[[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]], [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]]];\nexport default function LocationDetails({\n  location\n}) {\n  const {\n    0: isBrowser,\n    1: setIsBrowser\n  } = useState(false);\n  useEffect(() => {\n    // const mymap = L.map('mapid').setView([51.509, -0.08], 13);\n    // L.tileLayer(\n    //   'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic3NhbmNoZXptYXJjIiwiYSI6ImNrZjVybWpocjBxNDYyeW5vZjA1M3ZoN3MifQ.XR8RGT-Ns7aky5hUbwzfCw',\n    //   {\n    //     attribution:\n    //       'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    //     maxZoom: 18,\n    //     id: 'mapbox/streets-v11',\n    //     tileSize: 512,\n    //     zoomOffset: -1,\n    //     accessToken: 'your.mapbox.access.token',\n    //   },\n    // ).addTo(mymap);\n    //\n    // const polygon = L.polygon([\n    //   [51.509, -0.08],\n    //   [51.503, -0.06],\n    //   [51.51, -0.047],\n    // ]).addTo(mymap);\n    setIsBrowser(false);\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, isBrowser && __jsx(SemanticContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(SemanticItem.Group, {\n    divided: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, __jsx(Item, {\n    key: location.id,\n    title: location.name,\n    detailsUrl: `location/${location.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }))), __jsx(SemanticContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(SemanticItem.Group, {\n    divided: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, __jsx(Item, {\n    key: location.id,\n    title: location.name,\n    imageSrc: \"/map.svg\",\n    detailsUrl: `location/${location.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }\n  }))));\n}\nexport const getServerSideProps = async ({\n  params\n}) => {\n  const res = await getLocation({\n    id: params.id\n  });\n  return {\n    props: {\n      location: res.data\n    }\n  };\n};","map":{"version":3,"sources":["/Users/sergiosanchez/Projects/fungus/applications/frontend/src/pages/locations/[id].tsx"],"names":["React","useEffect","useState","Item","SemanticItem","Container","SemanticContainer","getLocation","center","polygon","multiPolygon","LocationDetails","location","isBrowser","setIsBrowser","id","name","getServerSideProps","params","res","props","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAI,IAAIC,YAAjB,QAAqC,mBAArC;AACA,SAASC,SAAS,IAAIC,iBAAtB,QAA+C,mBAA/C;AAMA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,OAAOJ,IAAP,MAAiB,mBAAjB;AAMA,MAAMK,MAAM,GAAG,CAAC,MAAD,EAAS,CAAC,IAAV,CAAf;AAEA,MAAMC,OAAO,GAAG,CACd,CAAC,MAAD,EAAS,CAAC,IAAV,CADc,EAEd,CAAC,KAAD,EAAQ,CAAC,GAAT,CAFc,EAGd,CAAC,KAAD,EAAQ,CAAC,IAAT,CAHc,CAAhB;AAMA,MAAMC,YAAY,GAAG,CACnB,CACE,CAAC,KAAD,EAAQ,CAAC,IAAT,CADF,EAEE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAFF,EAGE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAHF,CADmB,EAMnB,CACE,CAAC,KAAD,EAAQ,CAAC,IAAT,CADF,EAEE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAFF,EAGE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAHF,CANmB,CAArB;AAaA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAmE;AAChF,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAa,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GArBQ,EAqBN,EArBM,CAAT;AAuBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,SAAS,IACR,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD,CAAc,KAAd;AAAoB,IAAA,OAAO,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,IAAD;AACE,IAAA,GAAG,EAAED,QAAQ,CAACG,EADhB;AAEE,IAAA,KAAK,EAAEH,QAAQ,CAACI,IAFlB;AAIE,IAAA,UAAU,EAAG,YAAWJ,QAAQ,CAACG,EAAG,EAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF,CAFJ,EAgBE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD,CAAc,KAAd;AAAoB,IAAA,OAAO,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEH,QAAQ,CAACG,EAApB;AAAwB,IAAA,KAAK,EAAEH,QAAQ,CAACI,IAAxC;AAA8C,IAAA,QAAQ,EAAC,UAAvD;AAAkE,IAAA,UAAU,EAAG,YAAWJ,QAAQ,CAACG,EAAG,EAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF,CAhBF,CADF;AAwBD;AAED,OAAO,MAAME,kBAAsC,GAAG,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAsB;AAC1E,QAAMC,GAAG,GAAG,MAAMZ,WAAW,CAAC;AAAEQ,IAAAA,EAAE,EAAEG,MAAM,CAACH;AAAb,GAAD,CAA7B;AAEA,SAAO;AAAEK,IAAAA,KAAK,EAAE;AAAER,MAAAA,QAAQ,EAAEO,GAAG,CAACE;AAAhB;AAAT,GAAP;AACD,CAJM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Item as SemanticItem } from 'semantic-ui-react';\nimport { Container as SemanticContainer } from 'semantic-ui-react';\nimport { GetServerSideProps } from 'next';\nimport Head from 'next/head';\nimport { Circle, CircleMarker, Map, Polygon, Popup, TileLayer } from 'react-leaflet';\n\nimport Location from './models/Location';\nimport getLocation from './queries/getLocation';\n\nimport Item from './components/Item';\n\ntype LocationProps = {\n  location: Location;\n};\n\nconst center = [51.505, -0.09];\n\nconst polygon = [\n  [51.515, -0.09],\n  [51.52, -0.1],\n  [51.52, -0.12],\n];\n\nconst multiPolygon = [\n  [\n    [51.51, -0.12],\n    [51.51, -0.13],\n    [51.53, -0.13],\n  ],\n  [\n    [51.51, -0.05],\n    [51.51, -0.07],\n    [51.53, -0.07],\n  ],\n];\n\nexport default function LocationDetails({ location }: LocationProps): JSX.Element {\n  const [isBrowser, setIsBrowser] = useState(false);\n  useEffect(() => {\n    // const mymap = L.map('mapid').setView([51.509, -0.08], 13);\n    // L.tileLayer(\n    //   'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1Ijoic3NhbmNoZXptYXJjIiwiYSI6ImNrZjVybWpocjBxNDYyeW5vZjA1M3ZoN3MifQ.XR8RGT-Ns7aky5hUbwzfCw',\n    //   {\n    //     attribution:\n    //       'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    //     maxZoom: 18,\n    //     id: 'mapbox/streets-v11',\n    //     tileSize: 512,\n    //     zoomOffset: -1,\n    //     accessToken: 'your.mapbox.access.token',\n    //   },\n    // ).addTo(mymap);\n    //\n    // const polygon = L.polygon([\n    //   [51.509, -0.08],\n    //   [51.503, -0.06],\n    //   [51.51, -0.047],\n    // ]).addTo(mymap);\n    setIsBrowser(false);\n  }, []);\n\n  return (\n    <div>\n      {isBrowser && (\n        <SemanticContainer>\n          <SemanticItem.Group divided>\n            {\n              <Item\n                key={location.id}\n                title={location.name}\n   \n                detailsUrl={`location/${location.id}`}\n              />\n            }\n          </SemanticItem.Group>\n        </SemanticContainer>\n      )}\n\n      <SemanticContainer>\n        <SemanticItem.Group divided>\n          {<Item key={location.id} title={location.name} imageSrc=\"/map.svg\" detailsUrl={`location/${location.id}`} />}\n        </SemanticItem.Group>\n      </SemanticContainer>\n    </div>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async ({ params }) => {\n  const res = await getLocation({ id: params.id });\n\n  return { props: { location: res.data } };\n};\n"]},"metadata":{},"sourceType":"module"}